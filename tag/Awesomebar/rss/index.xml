<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[undefined - Dietrich Ayala]]></title><description><![CDATA[Internet freedom, the web and Mozilla.]]></description><link>/</link><generator>Ghost</generator><lastBuildDate>Thu, 20 Jul 2017 12:11:35 GMT</lastBuildDate><atom:link href="/tag/undefined/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Front-end Performance in Firefox 3.5 and Beyond]]></title><description><![CDATA[<p>One of the major changes in Firefox 3 was the amount of browsing history saved. In Firefox 2, the default amount of history saved was 9 days, so just over a week. The default in Firefox 3 is 180 days. Or 6 months. Or <em>20 times</em> the amount that Firefox 2 stored. However you slice it, it&#39;s a far greater amount of data than was previously stored. An example benefit is that we can use this set of data to more accurately predict what you&#39;re searching for in the Awesomebar. However, the challenge is to keep the browser <em>fast</em>, at least as fast as if we still only stored 9 days, and not only in the Awesomebar, but everywhere and anywhere that this data is exposed.</p>
<p><a href="https://wiki.mozilla.org/Firefox3.5">Firefox 3.5</a> contains a large number of internal changes to how we store, manage and display this data, in order to improve performance. <a href="http://twitter.com/sdwilsh" title="Shawn on Twitter">Shawn Wilsher</a> and <a href="http://twitter.com/mak77" title="Marco on Twitter">Marco Bonardo</a> spent an immense amount of time and effort altering almost every SQL query in <a href="https://wiki.mozilla.org/Places">Places</a>, the bookmark and history infrastructure, so that it no longer needs to write to the database every time you visit a page, a project <a href="http://shawnwilsher.com/archives/168">well</a> <a href="http://shawnwilsher.com/archives/169">chronicled</a> <a href="http://shawnwilsher.com/archives/170">on</a> <a href="http://shawnwilsher.com/archives/172">Shawn&#39;s</a> <a href="http://shawnwilsher.com/archives/242">blog</a>. Spurred on by one of <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=478097">Shawn&#39;s performance wins</a>, <a href="http://ed.agadak.net/" title="Ed">Ed Lee</a> was able to drastically <a href="http://ed.agadak.net/2009/02/looking-for-location-bar-perf-testers">speed up searching in the Awesomebar</a>. Even now, we&#39;re working on changes that will vastly improve the performance of the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=488966">history menu</a>, sidebar, and smart folders, as well as just <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=490664">browsing around the Library</a>. To try out some of these changes, <a href="http://www.mozilla.com/en-US/firefox/all-beta.html" title="Firefox 3.5 Beta 4">download the latest beta of Firefox 3.5</a>.</p>
<p>This work has been aided by better visibility and diagnosis of performance regressions due to tools such as <a href="http://developer.apple.com/tools/sharkoptimize.html">Shark</a> and <a href="https://wiki.mozilla.org/Performance/Optimizing_JavaScript_with_DTrace">DTrace</a>, and all the work <a href="http://alice.nodelman.net/blog/">Alice</a> and others have done in performance monitoring on Tinderbox. Also, Shawn&#39;s work on <a href="https://developer.mozilla.org/en/Storage">mozStorage</a>, the SQLite interface in Firefox, has provided us with reporting of <a href="http://shawnwilsher.com/archives/251">poorly performing queries</a> in debug builds.</p>
<p>A recent effort to gather real world usage data is the <a href="https://places-stats.mozilla.com/">Places Statistics project</a>, run by <a href="http://blog.mozilla.com/adw/">Drew Willcoxon</a> and <a href="http://daviddahl.blogspot.com/">David Dahl</a>. Drew created a script that culled statistical information about browsing behavior from the database that stores a user&#39;s history and bookmarks. Users who wish to participate can anonymously submit their statistics to a website that aggregates the data. David wrote a Python tool that generates databases based on the aggregate data, that we can use as canonical datasets to test against. One of the first ways we&#39;ll put this data to use is to run our current <a href="https://wiki.mozilla.org/Performance:Tinderbox_Tests">performance test suite</a> against minimum, average and maximum sized databases generated by this tool.</p>
<p>Firefox will never be fast enough, so the work continues into <a href="https://wiki.mozilla.org/Firefox/Namoroka">Firefox.next</a>. We&#39;re using <a href="https://developer.mozilla.org/en/Storage#Asynchronously">asynchronous SQL queries</a> to move more database activity into the background, so as to not block the browser UI. This will surface in the Awesomebar (testable via <a href="http://shawnwilsher.com/archives/255">Shawn&#39;s extension</a>) and <a href="http://blog.mozilla.com/adw/">Drew Willcoxon&#39;s</a> work on the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=490714">Places query system</a>.</p>
<p>You can help: If you think something is too slow, please <a href="https://bugzilla.mozilla.org/enter_bug.cgi">file a bug</a>, and add &quot;[TSnappiness]&quot; to bug&#39;s whiteboard field, or in your report. Here&#39;s the current <a href="https://bugzilla.mozilla.org/buglist.cgi?quicksearch=tsnappiness">list of TSnappiness bugs</a>.</p>
<p>[UPDATE: Thanks jst for pointing out my humble interpretation of 180 days as only 3 months]</p>
]]></description><link>/2009/05/front-end-performance-in-firefox-35-and-beyond/index.html</link><guid isPermaLink="true">/2009/05/front-end-performance-in-firefox-35-and-beyond/index.html</guid><category><![CDATA[Awesomebar]]></category><category><![CDATA[Bookmarks]]></category><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[Places]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Wed, 06 May 2009 00:00:00 GMT</pubDate></item></channel></rss>