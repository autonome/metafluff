<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[undefined - Dietrich Ayala]]></title><description><![CDATA[Working towards true user agency through a distributed web.]]></description><link>/</link><generator>Ghost</generator><lastBuildDate>Tue, 12 May 2020 02:32:38 GMT</lastBuildDate><atom:link href="/tag/undefined/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA["Experiments in Tab Unloading"]]></title><description><![CDATA[<p><strong>We implemented session restore in Firefox 2, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=328154">thirteen years ago</a>.</strong> This was back when we used CVS, automated tests weren&#39;t yet required, and everything we did was uphill both ways... in snow.</p>
<p>Tab unloading was a feature I <em>really</em> wanted, but it was lower priority, and discussions with our design team always went into the sarlaac pit of heuristics - when is the right time to unload the tab, without annoying the user by having to reload the page when they want it?</p>
<p>Being a <a href="https://metafluff.com/2017/07/21/i-am-a-tab-hoarder/">tab hoarder myself</a>, I wrote an extension that implements this feature for my own benefit, and also to learn a bit about what worked and didn&#39;t. I had to live without it for a bit after the great WebExtension migration, until the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1128502">right API was finally shipped</a> that supported the features I needed.</p>
<p>You can install this extension here: <a href="https://addons.mozilla.org/en-US/firefox/addon/dormancy/">https://addons.mozilla.org/en-US/firefox/addon/dormancy/</a></p>
<p><img src="dormancy.png" alt="Dormancy Options"></p>
<p>I&#39;d like to share a few things I learned while making and running this extension.</p>
<p><strong>TL;DR: My optimal heuristics for tab unloading are &quot;unload tabs 15 minutes after last focused&quot; + &quot;never unload tabs in active window&quot;.</strong></p>
<p>Here are my findings and recommendations for building a tab unloading feature. They&#39;re not exhaustive, just the set of things I learned in my experiments.</p>
<ul>
<li><p>Most important: Do not trust any ideas or assumptions you have about this. You must personally live with different heuristics for a few days or a week. Experience the pain of your assumptions. There&#39;s one assumption that is 100% correct: When this feature is tuned incorrectly, it is SUPER ANNOYING.</p>
</li>
<li><p>Personal and team testing is not enough. Do some research with real users. Write a test extension, and a blog post where people can test and provide feedback. Get as diverse set of testers as possible, and trust their feedback.</p>
</li>
<li><p>This is a feature for power users. The telemetry for tab-counts shows this to be true. The unloading heuristics should take that into account. The users who will ever see this feature in action are tiny subset of overall browser users, so it should be tuned specifically to their behavior. That behavior should be explored in the research (more on this below).</p>
</li>
<li><p>Time-since-tab-was-focused is the most important heuristic for me. While running Dormancy, I learned that 5 minutes of inactivity on a tab is wayyyy too low.  I&#39;ve settled on 15 minutes - it basically never surprises me, and I rarely experience a tab reload.</p>
</li>
<li><p>Ignore-active-window is the second most important heuristic, but only matters for multi-window users obviously. IIRC our telemetry says there aren&#39;t many multi-window users... well, maybe not enough for defaults around this. But for people with multiple long-lived windows, keeping active window alive is <em>fantastic</em>.</p>
</li>
</ul>
<p>About tab usage behavior - I&#39;ve only scratched the surface of this. I wrote a few extensions that reflect my behavior dashboard-style in the toolbar so I can get a sense for levels of activity for different actions:</p>
<ul>
<li><a href="https://addons.mozilla.org/en-US/firefox/addon/tab-count-button/">Show number of open tabs across all windows</a></li>
<li><a href="https://addons.mozilla.org/en-US/firefox/addon/tabs-opened-button/">Show number of tabs opened today</a></li>
<li><a href="https://addons.mozilla.org/en-US/firefox/addon/tabs-closed-button/">Show number of tabs closed today</a></li>
<li><a href="https://addons.mozilla.org/en-US/firefox/addon/tabs-switched-button/">Show number of tab switches today</a></li>
</ul>
<p>These are shipped as separate extensions because you cannot adjust the width of toolbar icons, and I want all counts visible. They&#39;re all one extension, and the <a href="https://github.com/autonome/tabstatistics">source code is on Github</a>.</p>
<p><img src="tabstats.png" alt="Tab Statistics"></p>
<p>I&#39;ve only done some basic counting, but research into more complex interactions and behavior should be done. For example, how people traverse tabs will determine whether the feature really works for them. If they use keyboard shortcuts to move across large sets of tabs, it will not be effective in single window mode using only a timeout, because the last-focused-time will constantly be reset.</p>
<p>If you&#39;d like to learn more, there&#39;s <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=675539">a bug filed for this feature</a>, with many years of discussion.</p>
]]></description><link>/2018/11/27/tab-unloading/index.html</link><guid isPermaLink="true">/2018/11/27/tab-unloading/index.html</guid><category><![CDATA[Firefox]]></category><category><![CDATA[Tabs]]></category><category><![CDATA[UX]]></category><category><![CDATA[Extensions]]></category><category><![CDATA[WebExtensions]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Tue, 27 Nov 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA["The New Firefox and Ridiculous Numbers of Tabs"]]></title><description><![CDATA[<p><img src="tabs.png" alt="Tabs!"></p>
<p>I&#39;ve got a Firefox profile with 1691 tabs.</p>
<p>I started trying to write down why, but gave up for now. It was becoming an overly long exploration of product design and the future of the web.</p>
<p>It&#39;s Friday. Let&#39;s keep things simple.</p>
<p>As you would expect, Firefox handled this profile quite poorly for a long time. I got used to multi-minute startup time, waiting 15-30 seconds for tabs from external apps to show up, and all manner of non-responsive behavio(u)r.</p>
<p>And then, quite recently, everything changed.</p>
<h2 id="quantum-flow">Quantum Flow</h2>
<p>Right now, more effort is being put into making Firefox fast than I&#39;ve seen since... well, since I&#39;ve been working on Firefox. And I&#39;ve been at Mozilla for more than a decade.</p>
<p>Part of this effort is a project called Quantum Flow - a bunch of engineers making changes that directly impact Firefox responsiveness. To learn more and follow along with these efforts, read <a href="https://ehsanakhgari.org/tag/quantumflow">Ehsan Akhgari&#39;s weekly posts</a>.</p>
<p>A lot of the improvement in this particular scenario is from Kevin Jones&#39; work on bringing the overall cost of unloaded tabs as close to zero as possible. While the major work has landed, the work continues in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=906076">Bug 906076</a>. Huge amounts of thanks for the recent wins for us pathological tab hoarders go to Kevin, DÃ£o Gottwald, Mike de Boer, Tim Taubert, David Teller, Mike Conley, and Gijs Kruitbosch.</p>
<h2 id="test-scenario">Test Scenario</h2>
<p>I took my 1691 tab browser profile, and did a wall-clock measurement of start-up time and memory use for Firefox versions 20, 30, 40, and 50 through 56.</p>
<p>These are my personal results. You might not get the same results. If you test 1691 (or even 1692) tabs and find something totally different, I&#39;d love to hear about it.</p>
<p>Notes:</p>
<ul>
<li><p>I shut down most things on my Macbook (yeah the little one that&#39;s more like a glorified iPad).</p>
</li>
<li><p>I turned off wifi. This is a measurement of Firefox, not the network, nor web page rendering.</p>
</li>
<li><p>I measured by eyeball, using &quot;time cat&quot; on the command line. This might seem weird, but c&#39;mon - I&#39;m measuring <em>minutes</em>. Microsecond precision is not required.</p>
</li>
<li><p>I measured startup time five times, dropping highs and lows. Even that wasn&#39;t really necessary - the times were <em>startingly consistent</em>. With almost 1700 tabs and &gt;5 minute startup, the standard deviation was negligible.</p>
</li>
<li><p>For measuring startup time, I killed the timer when the &quot;server not found&quot; page finished being rendered in the active tab. After lots of testing, I consistently found this to be the point at which the application as a whole became responsive and usable.</p>
</li>
<li><p>For memory, I waited for one minute after the startup measurement point and then grabbed the total value from the bottom of about:memory. I waited one minute, because I observed a consistent spike in memory after startup which went away within the first minute and then stabilized for a long period after. It&#39;s all kinds of initialization that doesn&#39;t need to block the app from starting, but needs to happen once you get to browsing.</p>
</li>
<li><p>I tested Firefox versions 20, 30, 40, and 50 through 56. I tried testing Firefox 10 but it permahung while loading the profile.</p>
</li>
</ul>
<h2 id="start-up-time">Start-up Time</h2>
<p>Graph of startup time with 1691 tabs across Firefox versions 20, 30, 40 and 50 - 56. The Y axis is <em>minutes</em>. Yes, Firefox 51 took almost <em>8 MINUTES</em> to start up. However, as of Firefox 55 it only takes <em>15 seconds</em>. For 1691 tabs. Really. I no longer fear restarts. Lately, I just restart Firefox for fun sometimes.</p>
<p><img src="startup.png" alt="Startup time"></p>
<p>It&#39;s interesting that Firefox startup time got consistently <em>worse</em> over time until Firefox 51. It&#39;d be interesting to do this test with varying numbers of tabs and find out at what point these types of regressions become noticeable.</p>
<h2 id="memory-usage">Memory Usage</h2>
<p>Graph of memory use one minute after startup with 1691 tabs across Firefox versions 20, 30, 40 and 50 - 56. While consistently using around two gigs of memory, we&#39;ve now reduced to <em>less than half a gig</em>. Yes, this is without actual web pages loaded, but look at this, haters: I&#39;ve now got 1.5 gigs of memory to load web pages into that I didn&#39;t have before.</p>
<p><img src="memory.png" alt="Memory use"></p>
<p>The efforts that the Firefox and Gecko and Servo teams are putting into making a SUPERFUCKINGFAST browser are having a real impact, and that&#39;s exciting to see.</p>
]]></description><link>/2017/07/21/i-am-a-tab-hoarder/index.html</link><guid isPermaLink="true">/2017/07/21/i-am-a-tab-hoarder/index.html</guid><category><![CDATA[Firefox]]></category><category><![CDATA[Performance]]></category><category><![CDATA[Tabs]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Fri, 21 Jul 2017 00:00:00 GMT</pubDate></item></channel></rss>