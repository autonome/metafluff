<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[undefined - Dietrich Ayala]]></title><description><![CDATA[Internet freedom, the web and Mozilla.]]></description><link>/</link><generator>Ghost</generator><lastBuildDate>Thu, 20 Jul 2017 12:11:34 GMT</lastBuildDate><atom:link href="/tag/undefined/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Firefox, Extensions and Performance]]></title><description><![CDATA[<p>Extensibility is a double-edged sword. It&#39;s a keystone feature in Firefox - differentiating even now that just about every other browser has some vector for augmentation. However, along with the freedom and power of Firefox extensions comes the ability to slow the browser down. And worse, users and developers have little or no visibility into the causes of poor extension performance.</p>
<p>Not all extensions slow Firefox down. But they can. To prevent that, we need to do three things:</p>
<ol>
<li>Make it <em>easy</em> for extension developers to keep their extensions fast.</li>
<li>Allow users to see the performance effect of their extensions.</li>
<li>Mitigate the effects of badly-behaving extensions in Firefox itself.</li>
</ol>
<h3 id="for-extension-developers">For Extension Developers</h3>
<p>First, we need to loudly and clearly educate extension developers, and provide them tools. Some ideas:</p>
<ul>
<li>Write an extension performance &quot;best practices&quot; guide on MDC.</li>
<li>Build warnings into Firefox, that highlight code that might perform poorly (<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=550242">bug 550242</a>).</li>
<li>Provide a <a href="https://wiki.mozilla.org/Build:TryServer">try-server</a> that allows extensions to be uploaded and installed into the test profile.</li>
<li>Perform automated performance testing of extensions upload to AMO (<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=458990">bug 458990</a>, maybe?)</li>
<li>Ensure that Jetpack generates extensions that are models for good behavior.</li>
</ul>
<h3 id="for-users">For Users</h3>
<p>Users should be able to make informed choices about the extensions they install, and be able to monitor the effect of extensions on their browsing sessions. We could:</p>
<ul>
<li>Provide performance information for extensions on their pages on AMO.</li>
<li>Build a performance dashboard similar to <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=515354">about:memory</a>, but tracking startup time, page-load time, and browser UI behavior such as menu responsiveness. Given a visualization of these things over time, users can see the effects of installing different extensions.</li>
</ul>
<h3 id="in-the-core">In the Core</h3>
<p>There are also things we can do to mitigate poor performance in core Firefox code. This is being discussed in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=533038">bug 533038</a>.</p>
<p>We&#39;re already working on some of the ideas listed above. Ping me in <a href="irc://irc.mozilla.org/#startup">#startup on irc.mozilla.org</a> if you want to help out. If you have ideas for other ways to improve extension performance, or to communicate back to users and developers, let me know in the comments.</p>
]]></description><link>/2010/03/firefox-extensions-and-performance/index.html</link><guid isPermaLink="true">/2010/03/firefox-extensions-and-performance/index.html</guid><category><![CDATA[extensions]]></category><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Thu, 11 Mar 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox, Extensions and Performance]]></title><description><![CDATA[<p>Extensibility is a double-edged sword. It&#39;s a keystone feature in Firefox - differentiating even now that just about every other browser has some vector for augmentation. However, along with the freedom and power of Firefox extensions comes the ability to slow the browser down. And worse, users and developers have little or no visibility into the causes of poor extension performance.</p>
<p>Not all extensions slow Firefox down. But they can. To prevent that, we need to do three things:</p>
<ol>
<li>Make it <em>easy</em> for extension developers to keep their extensions fast.</li>
<li>Allow users to see the performance effect of their extensions.</li>
<li>Mitigate the effects of badly-behaving extensions in Firefox itself.</li>
</ol>
<h3 id="for-extension-developers">For Extension Developers</h3>
<p>First, we need to loudly and clearly educate extension developers, and provide them tools. Some ideas:</p>
<ul>
<li>Write an extension performance &quot;best practices&quot; guide on MDC.</li>
<li>Build warnings into Firefox, that highlight code that might perform poorly (<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=550242">bug 550242</a>).</li>
<li>Provide a <a href="https://wiki.mozilla.org/Build:TryServer">try-server</a> that allows extensions to be uploaded and installed into the test profile.</li>
<li>Perform automated performance testing of extensions upload to AMO (<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=458990">bug 458990</a>, maybe?)</li>
<li>Ensure that Jetpack generates extensions that are models for good behavior.</li>
</ul>
<h3 id="for-users">For Users</h3>
<p>Users should be able to make informed choices about the extensions they install, and be able to monitor the effect of extensions on their browsing sessions. We could:</p>
<ul>
<li>Provide performance information for extensions on their pages on AMO.</li>
<li>Build a performance dashboard similar to <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=515354">about:memory</a>, but tracking startup time, page-load time, and browser UI behavior such as menu responsiveness. Given a visualization of these things over time, users can see the effects of installing different extensions.</li>
</ul>
<h3 id="in-the-core">In the Core</h3>
<p>There are also things we can do to mitigate poor performance in core Firefox code. This is being discussed in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=533038">bug 533038</a>.</p>
<p>We&#39;re already working on some of the ideas listed above. Ping me in <a href="irc://irc.mozilla.org/#startup">#startup on irc.mozilla.org</a> if you want to help out. If you have ideas for other ways to improve extension performance, or to communicate back to users and developers, let me know in the comments.</p>
]]></description><link>/2010/03/firefox-extensions-and-performance/index.html</link><guid isPermaLink="true">/2010/03/firefox-extensions-and-performance/index.html</guid><category><![CDATA[extensions]]></category><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Thu, 11 Mar 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - March 5, 2010]]></title><description><![CDATA[<p>I spent the week on-site at Mozilla HQ in Mountain View, which was great.</p>
<ul>
<li>Talked with Bob Moss and others about expanding our startup tests to cover a <a href="https://wiki.mozilla.org/Firefox/Projects/StartupPerformance/TestMatrix">variety of startup scenarios</a>.</li>
<li>Spent some time tracing file IO with the top 10 extensions on AMO installed, comparing it to an empty profile (<a href="http://people.mozilla.com/~dietrich/open.empty.txt">empty</a>, <a href="http://people.mozilla.com/~dietrich/open.extensions.txt">with extensions</a>) for <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=533038">a bug Taras filed</a> about extension-caused file IO.</li>
<li>I also traced shell calls in the startup path, and found <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=550310">some weirdness</a>, and yeah there are a bunch more calls with the top 10 extensions installed (<a href="http://people.mozilla.com/~dietrich/exec.txt">empty</a>, <a href="http://people.mozilla.com/~dietrich/exec.extensions.txt">with extensions</a>). Things like this should be &quot;advertised&quot; on extensions&#39; pages on AMO. I&#39;m pretty sure there&#39;s already some movement towards Talos testing extensions and posting results on AMO. I&#39;ll file a bug for getting things like this watched as well.</li>
<li>Taras has been making progress using <a href="http://valgrind.org/">Valgrind</a> to get the function and data ordering sequence for <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=531406">improving code locality in our binaries</a>.</li>
<li>Ryan patched and landed a change to <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=549788">increase the buffer size used when reading in JSON files</a> (something the search service does during startup).</li>
</ul>
]]></description><link>/2010/03/firefox-startup-performance-march-5-2010/index.html</link><guid isPermaLink="true">/2010/03/firefox-startup-performance-march-5-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 06 Mar 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - March 5, 2010]]></title><description><![CDATA[<p>I spent the week on-site at Mozilla HQ in Mountain View, which was great.</p>
<ul>
<li>Talked with Bob Moss and others about expanding our startup tests to cover a <a href="https://wiki.mozilla.org/Firefox/Projects/StartupPerformance/TestMatrix">variety of startup scenarios</a>.</li>
<li>Spent some time tracing file IO with the top 10 extensions on AMO installed, comparing it to an empty profile (<a href="http://people.mozilla.com/~dietrich/open.empty.txt">empty</a>, <a href="http://people.mozilla.com/~dietrich/open.extensions.txt">with extensions</a>) for <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=533038">a bug Taras filed</a> about extension-caused file IO.</li>
<li>I also traced shell calls in the startup path, and found <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=550310">some weirdness</a>, and yeah there are a bunch more calls with the top 10 extensions installed (<a href="http://people.mozilla.com/~dietrich/exec.txt">empty</a>, <a href="http://people.mozilla.com/~dietrich/exec.extensions.txt">with extensions</a>). Things like this should be &quot;advertised&quot; on extensions&#39; pages on AMO. I&#39;m pretty sure there&#39;s already some movement towards Talos testing extensions and posting results on AMO. I&#39;ll file a bug for getting things like this watched as well.</li>
<li>Taras has been making progress using <a href="http://valgrind.org/">Valgrind</a> to get the function and data ordering sequence for <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=531406">improving code locality in our binaries</a>.</li>
<li>Ryan patched and landed a change to <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=549788">increase the buffer size used when reading in JSON files</a> (something the search service does during startup).</li>
</ul>
]]></description><link>/2010/03/firefox-startup-performance-march-5-2010/index.html</link><guid isPermaLink="true">/2010/03/firefox-startup-performance-march-5-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 06 Mar 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Graph Server Improvements]]></title><description><![CDATA[<p>The <a href="http://graphs.mozilla.org/">graph server</a> is a powerful tool for visualizing the results of our performance tests over time. However, it has a few major problems that make using it in it&#39;s current form difficult. It also lacks a few features that would make it far more useful for tasks such as regression-finding. I and a few other people are looking into improving the graph server. Before starting though, we need to know how you use the graph server, and your ideas for how the interface could be improved, so please let me know your thoughts in the comments!</p>
<p><img src="graphserver1.png" alt="graph server" title="graph server"></p>
]]></description><link>/2010/02/graph-server-improvements/index.html</link><guid isPermaLink="true">/2010/02/graph-server-improvements/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[graph]]></category><category><![CDATA[server]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sun, 28 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Graph Server Improvements]]></title><description><![CDATA[<p>The <a href="http://graphs.mozilla.org/">graph server</a> is a powerful tool for visualizing the results of our performance tests over time. However, it has a few major problems that make using it in it&#39;s current form difficult. It also lacks a few features that would make it far more useful for tasks such as regression-finding. I and a few other people are looking into improving the graph server. Before starting though, we need to know how you use the graph server, and your ideas for how the interface could be improved, so please let me know your thoughts in the comments!</p>
<p><img src="graphserver1.png" alt="graph server" title="graph server"></p>
]]></description><link>/2010/02/graph-server-improvements/index.html</link><guid isPermaLink="true">/2010/02/graph-server-improvements/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[graph]]></category><category><![CDATA[server]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sun, 28 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - Stardate 2.27.2010]]></title><description><![CDATA[<p>Instead of copying around the table of high-priority startup projects, it&#39;s now centrally located and updated on the <a href="https://wiki.mozilla.org/Firefox/Projects/Startup_Time_Improvements#Active_Projects">Startup wiki page</a>. A couple of front-end optimizations landed this week:</p>
<ul>
<li>Neil landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=354048">bug 354048</a> to not rebuild toolbars at startup.</li>
<li>Ryan landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=522842">bug 522842</a> for the search service to not send notifications until all engines are loaded.
I&#39;ll be in Mountain View all next week for the Firefox work-week.</li>
</ul>
]]></description><link>/2010/02/firefox-startup-performance-stardate-2-27-2010/index.html</link><guid isPermaLink="true">/2010/02/firefox-startup-performance-stardate-2-27-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sun, 28 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - Stardate 2.27.2010]]></title><description><![CDATA[<p>Instead of copying around the table of high-priority startup projects, it&#39;s now centrally located and updated on the <a href="https://wiki.mozilla.org/Firefox/Projects/Startup_Time_Improvements#Active_Projects">Startup wiki page</a>. A couple of front-end optimizations landed this week:</p>
<ul>
<li>Neil landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=354048">bug 354048</a> to not rebuild toolbars at startup.</li>
<li>Ryan landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=522842">bug 522842</a> for the search service to not send notifications until all engines are loaded.
I&#39;ll be in Mountain View all next week for the Firefox work-week.</li>
</ul>
]]></description><link>/2010/02/firefox-startup-performance-stardate-2-27-2010/index.html</link><guid isPermaLink="true">/2010/02/firefox-startup-performance-stardate-2-27-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sun, 28 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - Feb 19, 2010]]></title><description><![CDATA[<p>Taras <a href="http://blog.mozilla.com/tglek/2010/02/19/teaching-ld-to-optimize-binaries-for-startup/">blogged  about the function ordering work</a> he did while on vacation in Fiji  (?!). Looks like the potential for a minimum 10% win there, very exciting. Follow along in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=531406">bug 531406</a>.</p>
<p>Other than that, no major updates:</p>
<ul>
<li>Zack found surprisingly large performance wins just from deCOMtamination  patches in his CSS work. If you want to help out, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=105431" title="https://bugzilla.mozilla.org/show_bug.cgi?id=105431">bug 105431</a> is the deCOM tracker bug, and <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=545052" title="https://bugzilla.mozilla.org/show_bug.cgi?id=545052">bug 545052</a> is about building tools for automating deCOMtamination.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=525013">Static  build</a>: Still in reviews, need to figure out approach to binary tests  on the tinderbox.</li>
<li>Ben&#39;s <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=520309">fastload cache replacement</a> is still waiting on first-review from Ben Smedberg.</li>
<li>B<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=354048">ug 354048</a> to not rebuild toolbars at startup, still cycling through reviews.</li>
</ul>
]]></description><link>/2010/02/firefox-startup-performance-feb-19-2010/index.html</link><guid isPermaLink="true">/2010/02/firefox-startup-performance-feb-19-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 20 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - Feb 19, 2010]]></title><description><![CDATA[<p>Taras <a href="http://blog.mozilla.com/tglek/2010/02/19/teaching-ld-to-optimize-binaries-for-startup/">blogged  about the function ordering work</a> he did while on vacation in Fiji  (?!). Looks like the potential for a minimum 10% win there, very exciting. Follow along in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=531406">bug 531406</a>.</p>
<p>Other than that, no major updates:</p>
<ul>
<li>Zack found surprisingly large performance wins just from deCOMtamination  patches in his CSS work. If you want to help out, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=105431" title="https://bugzilla.mozilla.org/show_bug.cgi?id=105431">bug 105431</a> is the deCOM tracker bug, and <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=545052" title="https://bugzilla.mozilla.org/show_bug.cgi?id=545052">bug 545052</a> is about building tools for automating deCOMtamination.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=525013">Static  build</a>: Still in reviews, need to figure out approach to binary tests  on the tinderbox.</li>
<li>Ben&#39;s <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=520309">fastload cache replacement</a> is still waiting on first-review from Ben Smedberg.</li>
<li>B<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=354048">ug 354048</a> to not rebuild toolbars at startup, still cycling through reviews.</li>
</ul>
]]></description><link>/2010/02/firefox-startup-performance-feb-19-2010/index.html</link><guid isPermaLink="true">/2010/02/firefox-startup-performance-feb-19-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 20 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - Feb 11, 2010]]></title><description><![CDATA[<p>Various minor updates this week:</p>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=525013">Static build</a>: Ted did the first pass of review. Getting close. Will land on the Places branch once binary tests build, to see perf impact.</li>
<li>Ben&#39;s <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=520309">fastload cache replacement</a> is still waiting on first-review from Ben Smedberg.</li>
<li>Neil took up <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=354048">bug 354048</a> to not rebuild toolbars at startup, should reduce the DOM activity some at least. The patch is in review by Dao and Mano.</li>
<li>Marco has nearly completed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=542943">bug 542943</a>, removing the bookmark redirect hash, which means less SQL at startup and less memory usage by the bookmarks service.</li>
<li>I put a patch up on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=545516">bug 545516</a> that fixes some bugs and cleans up the layout of the <a href="http://graphs.mozilla.org/dashboard/snapshot/">Performance Snapshot</a>. Will get it landed next week.</li>
<li>Started working with John O&#39;Duinn and Mike Morgan to get a team together to work on the graph server.</li>
</ul>
]]></description><link>/2010/02/firefox-startup-performance-feb-11-2010/index.html</link><guid isPermaLink="true">/2010/02/firefox-startup-performance-feb-11-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Fri, 12 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - Feb 11, 2010]]></title><description><![CDATA[<p>Various minor updates this week:</p>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=525013">Static build</a>: Ted did the first pass of review. Getting close. Will land on the Places branch once binary tests build, to see perf impact.</li>
<li>Ben&#39;s <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=520309">fastload cache replacement</a> is still waiting on first-review from Ben Smedberg.</li>
<li>Neil took up <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=354048">bug 354048</a> to not rebuild toolbars at startup, should reduce the DOM activity some at least. The patch is in review by Dao and Mano.</li>
<li>Marco has nearly completed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=542943">bug 542943</a>, removing the bookmark redirect hash, which means less SQL at startup and less memory usage by the bookmarks service.</li>
<li>I put a patch up on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=545516">bug 545516</a> that fixes some bugs and cleans up the layout of the <a href="http://graphs.mozilla.org/dashboard/snapshot/">Performance Snapshot</a>. Will get it landed next week.</li>
<li>Started working with John O&#39;Duinn and Mike Morgan to get a team together to work on the graph server.</li>
</ul>
]]></description><link>/2010/02/firefox-startup-performance-feb-11-2010/index.html</link><guid isPermaLink="true">/2010/02/firefox-startup-performance-feb-11-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Fri, 12 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - Feb 5, 2010]]></title><description><![CDATA[<p>Nothing major to report. Some of the big projects are in the final stretch, which is great to see.</p>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=525013">Static build</a>: Joel&#39;s in cleanup phase, making sure the mobile tinderboxes build with the changes. Core patch is waiting on first review from Ted.</li>
<li>Ben&#39;s <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=520309">fastload cache replacement</a> is waiting on first-review from Ben Smedberg.</li>
<li>Zach has <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513149#c22">more data</a> on the effect of the CSS parser optimizations he&#39;s been working on.</li>
<li><p>Asaf put up an <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=528884">experimental patch</a> for making the bookmarks toolbar all JS, no XBL.
Related work I did this week:</p>
</li>
<li><p>Started updating the <a href="http://graphs.mozilla.org/dashboard/snapshot/">Performance Snapshot</a>. Fixing a couple of bugs and making the percentages relative to the 3.6 branch.</p>
</li>
<li>Spent some time poking at the graph server. It&#39;s got serious performance problems, and is lacking a few features that&#39;d make it immensely useful, instead of only somewhat useful. It just needs a little love, that&#39;s all.</li>
<li>Landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506471">bug  506471</a>, moving FUEL out of the startup path.</li>
</ul>
]]></description><link>/2010/02/firefox-startup-performance-feb-5-2010/index.html</link><guid isPermaLink="true">/2010/02/firefox-startup-performance-feb-5-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 06 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - Feb 5, 2010]]></title><description><![CDATA[<p>Nothing major to report. Some of the big projects are in the final stretch, which is great to see.</p>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=525013">Static build</a>: Joel&#39;s in cleanup phase, making sure the mobile tinderboxes build with the changes. Core patch is waiting on first review from Ted.</li>
<li>Ben&#39;s <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=520309">fastload cache replacement</a> is waiting on first-review from Ben Smedberg.</li>
<li>Zach has <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513149#c22">more data</a> on the effect of the CSS parser optimizations he&#39;s been working on.</li>
<li><p>Asaf put up an <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=528884">experimental patch</a> for making the bookmarks toolbar all JS, no XBL.
Related work I did this week:</p>
</li>
<li><p>Started updating the <a href="http://graphs.mozilla.org/dashboard/snapshot/">Performance Snapshot</a>. Fixing a couple of bugs and making the percentages relative to the 3.6 branch.</p>
</li>
<li>Spent some time poking at the graph server. It&#39;s got serious performance problems, and is lacking a few features that&#39;d make it immensely useful, instead of only somewhat useful. It just needs a little love, that&#39;s all.</li>
<li>Landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506471">bug  506471</a>, moving FUEL out of the startup path.</li>
</ul>
]]></description><link>/2010/02/firefox-startup-performance-feb-5-2010/index.html</link><guid isPermaLink="true">/2010/02/firefox-startup-performance-feb-5-2010/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 06 Feb 2010 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance - January 29]]></title><description><![CDATA[<p>No big changes from last week, so I&#39;m not going to knock you over the head with the big table, but here are some notes on the progress of some of the projects and areas of research:</p>
<ul>
<li>Joel has patch in Ted&#39;s review queue for the static build changes. He&#39;s also working on getting Windows builds un-broken, with help from Ben Smedberg and Brad Lassey.</li>
<li>Rob Campbell enabled PGO on the Mac, and found no detectable difference in performance. I built PGO on Linux, and found the same. It could be that there&#39;s no improvement to be had. It could be that our profile-generation approach doesn&#39;t target the codepaths that our performance tests measure. Not sure yet!</li>
<li>I talked with Rob Stong about the fast-startup component, and he brought up a bunch of problems with enabling it in multi-user environments. I&#39;m pretty convinced that there&#39;s no way we can ship with it enabled. And I&#39;m still convinced that it should be exposed as an option to users. I did get it actually working on Windows 7, and as expected, first startup post boot was 60% faster. The scary part is that it took 40% of startup to do the rest...</li>
<li>I researched code locality options for Linux, and haven&#39;t yet found a way to specify a function order like you&#39;re able to on Darwin. Joel&#39;s been spending some time looking into this on Mac, but gprof is broken on Snow Leopard - instrumented builds just hang. Boo.</li>
<li>Joel talked with some Apple developers on the Darwin list and got some more information about compressing with HFS+. They thought it was pretty hacky, recommended improving code locality instead (See previous comment about gprof being broken. <em>sigh</em>). Compressing locally does break our code-signed builds, so might not be feasible anyways. Next is to look into compressing on the release side.</li>
</ul>
]]></description><link>/2010/01/firefox-startup-performance-jan-29/index.html</link><guid isPermaLink="true">/2010/01/firefox-startup-performance-jan-29/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 30 Jan 2010 00:00:00 GMT</pubDate></item></channel></rss>