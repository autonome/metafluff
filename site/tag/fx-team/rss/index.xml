<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[undefined - Dietrich Ayala]]></title><description><![CDATA[Internet freedom, the web and Mozilla.]]></description><link>/</link><generator>Ghost</generator><lastBuildDate>Wed, 12 Jul 2017 05:35:22 GMT</lastBuildDate><atom:link href="/tag/undefined/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Firefox Startup Performance Weekly Roundup]]></title><description><![CDATA[<p>The Firefox and Platform teams were both onsite at the Mountain View office this week, getting some face-to-face time. There was a lot of great conversation and productive interaction between groups. The team of people focusing on application startup time went over all <a href="https://bugzilla.mozilla.org/buglist.cgi?quicksearch=sw:[ts]">the bugs marked [ts]</a>, discussing and prioritizing.</p>
<ul>
<li>Startup Timeline: While the timeline hasn&#39;t landed yet, you can still take advantage of it: David Dahl has an instrumented build, and will provide timeline info for you if you have an area you want to know about. More details on <a href="http://daviddahl.blogspot.com/2009/08/functiontimertimeline-update.html">his post</a>.</li>
<li>PGO for Places, mozStorage and SQLite: Still blocking on Rel-Eng fixing <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=486783">bug 486783</a>. I need to connect with John O&#39;Duinn and see if we can move this up in the schedule.</li>
<li>JAR Transition: Taras landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=508421">bug 508421</a> which allows anything in jar:toolkit.jar!/res/* to be loaded via resource://gre-resources/. This makes it very easy to move individual files into a jar, and access them in a fairly transparent way from code. This helps cold startup, as well as page-load time. He <a href="http://blog.mozilla.com/tglek/2009/08/27/moving-files-into-jars/">posted a HOWTO</a> for taking advantage of this.</li>
<li>JS Component Combining: No progress this week.</li>
<li>Static Analysis: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506128">Bug 506128</a> is wrapping up. David need to file a bug with the final log of named-yet-uncalled functions.</li>
<li>Dirty Profile Testing: No progress. Need to list scenarios, file bugs for each, generate Talos config patches and profile data, and then move it into Rel-Eng territory. Also, need to get a separate Tinderbox tree, since it&#39;s going to cause a bazillion new columns.</li>
<li>Cold Startup Testing: Drew Willcoxon is working on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510587">bug 510587</a>, to create a new Ts that measures cold startup. He&#39;s got patches up for adding head/tail file support to Talos. A new issue that cropped up this week is that the simulated cold-startup methods on Windows don&#39;t appear to work very well, so he&#39;s looking for advice there, as well as looking into reboot support in Talos.</li>
<li><a href="http://wagerlabs.com/">Joel Reymont</a> noticed that Safari&#39;s libs are loaded from the OS&#39;s warm cache, and ours are not! In<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513076"> bug 513076</a> he&#39;s investigating whether or not we can get our dynamic libraries in there as well.</li>
<li>Ryan Flint started looking into taking NSS and spellcheck initialization out of the startup path, and found that Shark says they&#39;re not in it on a regular startup! However, I found a <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=511515">recent bug from Vlad</a> talking about crazy stuff NSS does at startup (aside from the temp file dir skullduggery), so need to figure out how he&#39;s seeing that, and why Shark isn&#39;t.</li>
<li>CSS Parsing Time: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=91242">Bug 91242</a> says CSS parsing is 5.5% of startup time... in 2001. Taras has mentioned several times that it&#39;s still significant, so asked him for numbers for contemporary builds. <a href="http://zwol.livejournal.com/">Zack Weinberg</a> is working on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513149">speeding up parsing using a machine generated lexer</a>, need to get numbers from him on what kind of a difference it makes in parse time.
And if you haven&#39;t yet, read through<a href="http://blog.mozilla.com/tglek/2009/08/20/cleaning-up-startup-disk-io/"> Taras&#39; annotated log of files opened at startup</a>. If you see anything that can be delayed, or want to dig into why a certain file is loaded, let me know! Or just file a bug and put &quot;[ts]&quot; in the bug&#39;s status whiteboard.</li>
</ul>
]]></description><link>/2009/08/firefox-startup-performance-weekly-roundup/index.html</link><guid isPermaLink="true">/2009/08/firefox-startup-performance-weekly-roundup/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[fx-team]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sun, 30 Aug 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance]]></title><description><![CDATA[<p>A team of Firefox developers and others are working on making Firefox startup faster. Per <a href="http://beltzner.ca/mike/2009/08/07/firefox-team-weekly-roundups-planning-sprinting-and-reporting/">Mike Beltzner&#39;s post</a>, we&#39;ll be updating our status weekly. Here&#39;s the status of what the team did this week, as well as pointers to some other work going on. The list here highlights major points, but is not complete. Many more details of these projects, as well as other areas for investigation can be found on the <a href="https://wiki.mozilla.org/Firefox/Sprints/Startup_Time_Improvements">wiki page</a>, and on <a href="http://blog.vlad1.com/">Vlad</a> and <a href="http://blog.mozilla.com/tglek/">Taras&#39;</a> blogs.</p>
<p><strong>Status</strong></p>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=507101">XPCOM component combining</a> (Dietrich): Manually combined a bunch of files, and found improvements in sub 100ms, but varying results, so going to check-in to the Places branch temporarily to get better  numbers. Writing a script to hook into the build system to knit the components together automatically, but need better numbers before going further.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=419893">Enabling PGO for SQLite, mozStorage and Places</a> (Dietrich): Made a patch to re-enable PGO for these, and checked into the Places branch. Currently there are unit tests failing, but they look unrelated. Need to trigger more runs to ensure that&#39;s the case. Performance numbers are not definitive, need more runs to complete.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506128">Dead code  hunting with JSHydra</a> (DDahl): Have basic code for function finding,  making progress on code for building JS context for chrome URIs. (props  for help from taras, humph, jcranmer in #static)</li>
<li>Combining XPT files on Mac (Drew): Potentially significant gain of a few seconds on startup, investigation continuing.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=480735">Startup Timeline</a> (Vlad, DDahl): This is still in review.</li>
<li><p><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=504864">Combining jar files</a> (Taras): This is ready to check-in (again).
<strong>Next Steps</strong></p>
</li>
<li><p>Confirm numbers for combining JS components, finish script to automate combining, work with Ted to hook it into the packaging process, see if any modules can be combined.</p>
</li>
<li>Find out why tests are failing for PGO and quantify gain/loss when the slow tinderboxen finally report some numbers.</li>
<li>Get the startup timeline reviewed, landed and start adding markers and performing analysis.</li>
<li>Investigate why wall-clock time of combined jars doesn&#39;t decrease.</li>
<li>Get full browser JS context working in JSHydra, write the uncalled-function script, file dead-code bugs, get it plugged into continuous integration on tinderbox.</li>
<li>Get <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=475289">bug 475289</a> and <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=499123">bug 499123</a> landed, further reducing IO and component registration time spent at startup.</li>
</ul>
]]></description><link>/2009/08/firefox-startup-performance/index.html</link><guid isPermaLink="true">/2009/08/firefox-startup-performance/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[fx-team]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 08 Aug 2009 00:00:00 GMT</pubDate></item></channel></rss>