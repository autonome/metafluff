<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[undefined - Dietrich Ayala]]></title><description><![CDATA[Internet freedom, the web and Mozilla.]]></description><link>/</link><generator>Ghost</generator><lastBuildDate>Wed, 12 Jul 2017 05:35:22 GMT</lastBuildDate><atom:link href="/tag/undefined/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Harvesting Air Quality Data with a NodeMCU, SensorWeb and IFTTT]]></title><description><![CDATA[<p><a href="http://sensorweb.io/">Project SensorWeb</a> is an experiment from the <a href="https://wiki.mozilla.org/Connected_Devices/Projects">Connected Devices</a> group at Mozilla in open publishing of environmental data. I am excited about this experiment because we&#39;ve had some <a href="http://topics.oregonlive.com/tag/toxic%20air/">serious air quality discoveries in Portland</a> recently - our air is possibly <a href="http://koin.com/2016/03/02/study-portland-air-among-worst-in-nation/">the worst in the USA</a>, and bad enough that <a href="http://koin.com/2016/02/26/erin-brockovich-joins-portland-air-quality-fight/">mega-activists like Erin Brockovich are getting involved</a>.</p>
<p><img src="screen-shot-2016-07-13-at-5-21-01-pm.png" alt="Screen Shot 2016-07-13 at 5.21.01 PM"></p>
<p>A couple of weeks ago, Eddie and Evan from Project SensorWeb helped me put together a NodeMCU board and a PM2.5 sensor so I could set up an air quality sensor in Portland to report to their network. They&#39;re still setting up the project so I haven&#39;t gotten the configuration info from them yet...</p>
<p>But you don&#39;t need the SensorWeb server to get your sensor up and running and pushing data to your own server! I want a copy of the data for myself anyway, to be able to do my own visualizations and notifications. I can then forward the data on to SensorWeb.</p>
<p>So I started by flashing the current version of the SensorWeb code to the device, which is a Nodemcu 0.9 board with an ESP8266 wifi chip on board, and a PM2.5 sensor attached to it.</p>
<p><img src="2016-07-13-17-05-59.jpg" alt="2016-07-13 17.05.59"></p>
<p>I used <a href="https://rishav006.wordpress.com/2016/06/22/pm2-5-a-sensorweb-project-by-mozilla/">Kumar Rishav&#39;s excellent step-by-step post</a> to get through the process.</p>
<p>Some things I learned along the way:</p>
<ul>
<li>On Mac OS X you need a <a href="https://www.silabs.com/products/mcu/Pages/USBtoUARTBridgeVCPDrivers.aspx">serial port driver</a> in order for the Arduino IDE to detect the board.</li>
<li>After much gnashing of teeth, I discovered that you can&#39;t have the PM2.5 sensor plugged into the board when you flash it.
After getting the regular version flashed correctly, I tested with Kumar&#39;s API key and device id, and confirmed it was reporting the data correctly to the SensorWeb server.</li>
</ul>
<p>Now for the changes.</p>
<ul>
<li>I set up <a href="https://ifttt.com/maker">the Maker channel on IFTTT</a>, which allows me post data to an HTTP endpoint to get it into IFTTT&#39;s system.</li>
<li>I then created a new <a href="https://ifttt.com/recipes/440904-save-pm2-5-data-to-a-spreadsheet">IFTTT recipe that accepts the data from the device and pushes it into a Google spreadsheet</a>.</li>
<li>I forked the SensorWeb code and <a href="https://github.com/autonome/arduino-station/blob/master/station/nodemcu/nodemcu.ino">modified it to post to the Maker channel instead of the SensorWeb server</a>.
I flashed the device and viola, it is publishing data to my spreadsheet.</li>
</ul>
<p>&nbsp;</p>
<p><img src="screen-shot-2016-07-13-at-4-48-28-pm.png" alt="Screen Shot 2016-07-13 at 4.48.28 PM"></p>
<p>And now once SensorWeb is ready to take new devices, I can set up a new IFTTT recipe to forward the posts to them, allowing me to own my own data and also publish to the project!</p>
]]></description><link>/2016/07/harvesting-air-quality-data-with-a-nodemcu-sensorweb-and-ifttt/index.html</link><guid isPermaLink="true">/2016/07/harvesting-air-quality-data-with-a-nodemcu-sensorweb-and-ifttt/index.html</guid><category><![CDATA[arduino]]></category><category><![CDATA[ifttt]]></category><category><![CDATA[iot]]></category><category><![CDATA[iot]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Thu, 14 Jul 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Harvesting Air Quality Data with a NodeMCU, SensorWeb and IFTTT]]></title><description><![CDATA[<p><a href="http://sensorweb.io/">Project SensorWeb</a> is an experiment from the <a href="https://wiki.mozilla.org/Connected_Devices/Projects">Connected Devices</a> group at Mozilla in open publishing of environmental data. I am excited about this experiment because we&#39;ve had some <a href="http://topics.oregonlive.com/tag/toxic%20air/">serious air quality discoveries in Portland</a> recently - our air is possibly <a href="http://koin.com/2016/03/02/study-portland-air-among-worst-in-nation/">the worst in the USA</a>, and bad enough that <a href="http://koin.com/2016/02/26/erin-brockovich-joins-portland-air-quality-fight/">mega-activists like Erin Brockovich are getting involved</a>.</p>
<p><img src="screen-shot-2016-07-13-at-5-21-01-pm.png" alt="Screen Shot 2016-07-13 at 5.21.01 PM"></p>
<p>A couple of weeks ago, Eddie and Evan from Project SensorWeb helped me put together a NodeMCU board and a PM2.5 sensor so I could set up an air quality sensor in Portland to report to their network. They&#39;re still setting up the project so I haven&#39;t gotten the configuration info from them yet...</p>
<p>But you don&#39;t need the SensorWeb server to get your sensor up and running and pushing data to your own server! I want a copy of the data for myself anyway, to be able to do my own visualizations and notifications. I can then forward the data on to SensorWeb.</p>
<p>So I started by flashing the current version of the SensorWeb code to the device, which is a Nodemcu 0.9 board with an ESP8266 wifi chip on board, and a PM2.5 sensor attached to it.</p>
<p><img src="2016-07-13-17-05-59.jpg" alt="2016-07-13 17.05.59"></p>
<p>I used <a href="https://rishav006.wordpress.com/2016/06/22/pm2-5-a-sensorweb-project-by-mozilla/">Kumar Rishav&#39;s excellent step-by-step post</a> to get through the process.</p>
<p>Some things I learned along the way:</p>
<ul>
<li>On Mac OS X you need a <a href="https://www.silabs.com/products/mcu/Pages/USBtoUARTBridgeVCPDrivers.aspx">serial port driver</a> in order for the Arduino IDE to detect the board.</li>
<li>After much gnashing of teeth, I discovered that you can&#39;t have the PM2.5 sensor plugged into the board when you flash it.
After getting the regular version flashed correctly, I tested with Kumar&#39;s API key and device id, and confirmed it was reporting the data correctly to the SensorWeb server.</li>
</ul>
<p>Now for the changes.</p>
<ul>
<li>I set up <a href="https://ifttt.com/maker">the Maker channel on IFTTT</a>, which allows me post data to an HTTP endpoint to get it into IFTTT&#39;s system.</li>
<li>I then created a new <a href="https://ifttt.com/recipes/440904-save-pm2-5-data-to-a-spreadsheet">IFTTT recipe that accepts the data from the device and pushes it into a Google spreadsheet</a>.</li>
<li>I forked the SensorWeb code and <a href="https://github.com/autonome/arduino-station/blob/master/station/nodemcu/nodemcu.ino">modified it to post to the Maker channel instead of the SensorWeb server</a>.
I flashed the device and viola, it is publishing data to my spreadsheet.</li>
</ul>
<p>&nbsp;</p>
<p><img src="screen-shot-2016-07-13-at-4-48-28-pm.png" alt="Screen Shot 2016-07-13 at 4.48.28 PM"></p>
<p>And now once SensorWeb is ready to take new devices, I can set up a new IFTTT recipe to forward the posts to them, allowing me to own my own data and also publish to the project!</p>
]]></description><link>/2016/07/harvesting-air-quality-data-with-a-nodemcu-sensorweb-and-ifttt/index.html</link><guid isPermaLink="true">/2016/07/harvesting-air-quality-data-with-a-nodemcu-sensorweb-and-ifttt/index.html</guid><category><![CDATA[arduino]]></category><category><![CDATA[ifttt]]></category><category><![CDATA[iot]]></category><category><![CDATA[iot]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Thu, 14 Jul 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Bubble and Tweak - IoT at the Ends of the Earth]]></title><description><![CDATA[<p><img src="screen-shot-2016-07-12-at-3-19-07-pm.png" alt="Screen Shot 2016-07-12 at 3.19.07 PM"></p>
<p>Last month I spent a week working on IoT projects with a group of 40 researchers, designers and coders... in Anstruther, a small fishing village in Scotland. Not a high-tech hub, but that was the point. We immersed ourselves in a small community with limited connectivity and interesting weather (and <a href="https://www.tripadvisor.com/Restaurant_Review-g551743-d1898308-Reviews-The_Wee_Chippy-Anstruther_Fife_Scotland.html">fantastic F&amp;C</a>) in order to explore how they use technology and how ubiquitous physical computing might be woven into their lives.</p>
<p>The ideamonsters behind this event were <a href="https://twitter.com/thornet">Michelle Thorne</a> and <a href="https://twitter.com/ileddigital">Jon Rogers</a>, who are putting on a series of these exploratory events around the world this year as part of the Mozilla Foundation&#39;s <a href="https://wiki.mozilla.org/Open_IoT">Open IoT Studio</a>. The two previous editions of this event were a train caravan in India and a fablab sprint in Berlin (which I also attended, and will write up as well. I SWEAR.).</p>
<p>Michelle and Jon will be writing a proper summary of the week as a whole, so I&#39;m going to focus on the project my group built: Bubble.</p>
<p><img src="screen-shot-2016-07-12-at-3-18-39-pm.png" alt="Screen Shot 2016-07-12 at 3.18.39 PM"></p>
<h2 id="-context-"><strong>Context</strong></h2>
<p>From research conducted with local fishing folk, farmers from a bit inland, and a group of teenagers from the local school, we figured out a few things:</p>
<ul>
<li><strong>Mobile connectivity is sparse and unreliable</strong> throughout the whole region. In this particular town, only about half the town had any service.</li>
<li>The important <strong>information, places and things aren&#39;t immediately obvious</strong> unless you know a local.</li>
<li>Just like I was, growing up in a small town: <strong>The kids are just looking for something to do.</strong>
Initially we focused on the teens... fun things like virtual secret messaging at the red telephone boxes. Imagine you connect to the wifi at the phone box, and the captive portal is a web UI for leaving and receiving secret messages. Perhaps they&#39;re only read once before dying, like a hyperlocal Snapchat. Perhaps the system is user-less, mediated only by secret combinations of emojis as keys. The street corner becomes the hangout, physically and digitally.</li>
</ul>
<p>We meandered to public messaging from there, thinking about how there&#39;s so much to learn and share about the physical space. What&#39;s the story behind the messages to fairies that are being left in that phone box? I can see the island off the coast from here - what&#39;s it called and what&#39;s out there? Who the hell is Urquardt and what&#39;s a &quot;wynd&quot;? Maybe we make a public message board as well - disconnected from the internet but connected to anything within view.</p>
<p>We kept going back to the physical space. We talked about a virtual graffiti wall, and then started exploring AR and ways of marking up the surroundings - the people, the history, the local pro-tip on which fish and chips shop is the best. But all of this available only to people in close physical proximity.</p>
<p><img src="screen-shot-2016-07-12-at-3-40-49-pm.png" alt="Screen Shot 2016-07-12 at 3.40.49 PM"></p>
<h2 id="-implementation-"><strong>Implementation</strong></h2>
<p>Given the context and the constraints, as well as watching direction some of the other groups were going in, we started designing a general approach to bringing digital interactivity to disconnected spaces.</p>
<p>The first cut is <strong>Bubble</strong>: A <strong>wi-fi access point</strong> with a <strong>captive portal</strong> that opens a web page that displays an <strong>augmented reality</strong> view of your <strong>immediate surroundings</strong>, with messages overlaid on what you&#39;re seeing:</p>
<p><img src="screen-shot-2016-07-12-at-2-36-26-pm.png" alt="Screen Shot 2016-07-12 at 2.36.26 PM"></p>
<p>A few implementation notes:</p>
<ul>
<li>We used a Raspberry Pi 3, running as a wi-fi access point.</li>
<li>It ran a node.js script that served up the captive portal web UI.</li>
<li>The web UI used getUserMedia to access the device camera awe.js for the AR bits and A-Frame for a VR backup view on iOS.</li>
<li>We designed a logo and descriptive text and then lasercut some plaques to put up where hotspots are.
<strong>Designs, board, battery and boxes:</strong></li>
</ul>
<p><img src="screen-shot-2016-07-12-at-3-58-10-pm.png" alt="Screen Shot 2016-07-12 at 3.58.10 PM">
<strong>Connected to the front-end:</strong></p>
<p><img src="screen-shot-2016-07-12-at-3-57-57-pm.png" alt="Screen Shot 2016-07-12 at 3.57.57 PM"></p>
<p><strong>In the final box:</strong></p>
<p><img src="screen-shot-2016-07-12-at-3-58-33-pm.png" alt="Screen Shot 2016-07-12 at 3.58.33 PM"></p>
<p><strong>Challenges:</strong></p>
<ul>
<li>Captive portals are hobbled web pages. You can&#39;t do things like use getUserMedia to get access to the camera.</li>
<li>iOS doesn&#39;t have <em>any</em> way to let web pages access the camera.</li>
<li>Power can be hard. We talked about solar and other ways of powering these.</li>
<li>Gotta hope they don&#39;t get nicked.
Bubble was an experimental prototype. There are no plans to work further on it at this time. If you&#39;re interested, everything is on Github <a href="https://github.com/autonome/bubble">here</a>. You can read more about the design <a href="https://www.dropbox.com/s/yj11w3g3scwu93q/Bubble_DesignSprint_Scotland.pdf?dl=0">here (PDF)</a>.</li>
</ul>
<p>Thanks to fellow team members <a href="https://twitter.com/juliagratsova">Julia Gratsova</a>, <a href="https://twitter.com/kc_coffeekid">Katie Caldwell</a>, <a href="https://twitter.com/thecreatureslab">Vladan Joler</a>. (Sadly, no Julia in the phonebox!)</p>
<p><img src="screen-shot-2016-07-12-at-3-19-51-pm.png" alt="Screen Shot 2016-07-12 at 3.19.51 PM"></p>
]]></description><link>/2016/07/bubble-and-tweak-iot-at-the-ends-of-the-earth/index.html</link><guid isPermaLink="true">/2016/07/bubble-and-tweak-iot-at-the-ends-of-the-earth/index.html</guid><category><![CDATA[anstruther]]></category><category><![CDATA[iot]]></category><category><![CDATA[iot]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[scotland]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Wed, 13 Jul 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Bubble and Tweak - IoT at the Ends of the Earth]]></title><description><![CDATA[<p><img src="screen-shot-2016-07-12-at-3-19-07-pm.png" alt="Screen Shot 2016-07-12 at 3.19.07 PM"></p>
<p>Last month I spent a week working on IoT projects with a group of 40 researchers, designers and coders... in Anstruther, a small fishing village in Scotland. Not a high-tech hub, but that was the point. We immersed ourselves in a small community with limited connectivity and interesting weather (and <a href="https://www.tripadvisor.com/Restaurant_Review-g551743-d1898308-Reviews-The_Wee_Chippy-Anstruther_Fife_Scotland.html">fantastic F&amp;C</a>) in order to explore how they use technology and how ubiquitous physical computing might be woven into their lives.</p>
<p>The ideamonsters behind this event were <a href="https://twitter.com/thornet">Michelle Thorne</a> and <a href="https://twitter.com/ileddigital">Jon Rogers</a>, who are putting on a series of these exploratory events around the world this year as part of the Mozilla Foundation&#39;s <a href="https://wiki.mozilla.org/Open_IoT">Open IoT Studio</a>. The two previous editions of this event were a train caravan in India and a fablab sprint in Berlin (which I also attended, and will write up as well. I SWEAR.).</p>
<p>Michelle and Jon will be writing a proper summary of the week as a whole, so I&#39;m going to focus on the project my group built: Bubble.</p>
<p><img src="screen-shot-2016-07-12-at-3-18-39-pm.png" alt="Screen Shot 2016-07-12 at 3.18.39 PM"></p>
<h2 id="-context-"><strong>Context</strong></h2>
<p>From research conducted with local fishing folk, farmers from a bit inland, and a group of teenagers from the local school, we figured out a few things:</p>
<ul>
<li><strong>Mobile connectivity is sparse and unreliable</strong> throughout the whole region. In this particular town, only about half the town had any service.</li>
<li>The important <strong>information, places and things aren&#39;t immediately obvious</strong> unless you know a local.</li>
<li>Just like I was, growing up in a small town: <strong>The kids are just looking for something to do.</strong>
Initially we focused on the teens... fun things like virtual secret messaging at the red telephone boxes. Imagine you connect to the wifi at the phone box, and the captive portal is a web UI for leaving and receiving secret messages. Perhaps they&#39;re only read once before dying, like a hyperlocal Snapchat. Perhaps the system is user-less, mediated only by secret combinations of emojis as keys. The street corner becomes the hangout, physically and digitally.</li>
</ul>
<p>We meandered to public messaging from there, thinking about how there&#39;s so much to learn and share about the physical space. What&#39;s the story behind the messages to fairies that are being left in that phone box? I can see the island off the coast from here - what&#39;s it called and what&#39;s out there? Who the hell is Urquardt and what&#39;s a &quot;wynd&quot;? Maybe we make a public message board as well - disconnected from the internet but connected to anything within view.</p>
<p>We kept going back to the physical space. We talked about a virtual graffiti wall, and then started exploring AR and ways of marking up the surroundings - the people, the history, the local pro-tip on which fish and chips shop is the best. But all of this available only to people in close physical proximity.</p>
<p><img src="screen-shot-2016-07-12-at-3-40-49-pm.png" alt="Screen Shot 2016-07-12 at 3.40.49 PM"></p>
<h2 id="-implementation-"><strong>Implementation</strong></h2>
<p>Given the context and the constraints, as well as watching direction some of the other groups were going in, we started designing a general approach to bringing digital interactivity to disconnected spaces.</p>
<p>The first cut is <strong>Bubble</strong>: A <strong>wi-fi access point</strong> with a <strong>captive portal</strong> that opens a web page that displays an <strong>augmented reality</strong> view of your <strong>immediate surroundings</strong>, with messages overlaid on what you&#39;re seeing:</p>
<p><img src="screen-shot-2016-07-12-at-2-36-26-pm.png" alt="Screen Shot 2016-07-12 at 2.36.26 PM"></p>
<p>A few implementation notes:</p>
<ul>
<li>We used a Raspberry Pi 3, running as a wi-fi access point.</li>
<li>It ran a node.js script that served up the captive portal web UI.</li>
<li>The web UI used getUserMedia to access the device camera awe.js for the AR bits and A-Frame for a VR backup view on iOS.</li>
<li>We designed a logo and descriptive text and then lasercut some plaques to put up where hotspots are.
<strong>Designs, board, battery and boxes:</strong></li>
</ul>
<p><img src="screen-shot-2016-07-12-at-3-58-10-pm.png" alt="Screen Shot 2016-07-12 at 3.58.10 PM">
<strong>Connected to the front-end:</strong></p>
<p><img src="screen-shot-2016-07-12-at-3-57-57-pm.png" alt="Screen Shot 2016-07-12 at 3.57.57 PM"></p>
<p><strong>In the final box:</strong></p>
<p><img src="screen-shot-2016-07-12-at-3-58-33-pm.png" alt="Screen Shot 2016-07-12 at 3.58.33 PM"></p>
<p><strong>Challenges:</strong></p>
<ul>
<li>Captive portals are hobbled web pages. You can&#39;t do things like use getUserMedia to get access to the camera.</li>
<li>iOS doesn&#39;t have <em>any</em> way to let web pages access the camera.</li>
<li>Power can be hard. We talked about solar and other ways of powering these.</li>
<li>Gotta hope they don&#39;t get nicked.
Bubble was an experimental prototype. There are no plans to work further on it at this time. If you&#39;re interested, everything is on Github <a href="https://github.com/autonome/bubble">here</a>. You can read more about the design <a href="https://www.dropbox.com/s/yj11w3g3scwu93q/Bubble_DesignSprint_Scotland.pdf?dl=0">here (PDF)</a>.</li>
</ul>
<p>Thanks to fellow team members <a href="https://twitter.com/juliagratsova">Julia Gratsova</a>, <a href="https://twitter.com/kc_coffeekid">Katie Caldwell</a>, <a href="https://twitter.com/thecreatureslab">Vladan Joler</a>. (Sadly, no Julia in the phonebox!)</p>
<p><img src="screen-shot-2016-07-12-at-3-19-51-pm.png" alt="Screen Shot 2016-07-12 at 3.19.51 PM"></p>
]]></description><link>/2016/07/bubble-and-tweak-iot-at-the-ends-of-the-earth/index.html</link><guid isPermaLink="true">/2016/07/bubble-and-tweak-iot-at-the-ends-of-the-earth/index.html</guid><category><![CDATA[anstruther]]></category><category><![CDATA[iot]]></category><category><![CDATA[iot]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[scotland]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Wed, 13 Jul 2016 00:00:00 GMT</pubDate></item></channel></rss>