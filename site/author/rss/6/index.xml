<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Dietrich Ayala - Dietrich Ayala]]></title><description><![CDATA[Internet freedom, the web and Mozilla.]]></description><link>/</link><generator>Ghost</generator><lastBuildDate>Thu, 20 Jul 2017 12:11:35 GMT</lastBuildDate><atom:link href="/author//rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Firefox Startup Performance Weekly Summary]]></title><description><![CDATA[<p>Apologies for not posting last week, but <a href="http://dietrich.tumblr.com/post/189638511/atp-was-so-much-damn-fun">I was on vacation</a>. Recent activity:</p>
<ul>
<li>I&#39;ve updated the project wiki page with <a href="https://wiki.mozilla.org/Firefox/Projects/Startup_Time_Improvements#Overview">a table of summarized numbers</a> for at-a-glance tracking of progress. I need to disable superfetch and try again on Windows.</li>
<li>Our measurements of cold startup showed a huge regression on Windows from 3.5 to 3.6. Tracking this in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=517741">bug 517741</a>.</li>
<li>JARification: David abandoned <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=509755">moving JS  modules into a JAR file</a>, since those files are fastloaded. However, since we want things like post-extension-install restarts to be fast, and those cause fastload cache invalidation, we might want to do things like this anyways. I filed a bug for the same treatment for components. These are lower priority, since they&#39;re not the normal startup case. Follow along with all JAR-ification via<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513027"> the tracker  bug</a>.</li>
<li>JAR Performance: I&#39;m going to test-land <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510844">bug 510844</a> on the Places branch to figure out what&#39;s going wrong on the tinderbox. It should increase throughput of JAR file reading, possibly affecting Ts and Tp.</li>
<li>Removing the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=512827">needless stats of already-fastloaded components</a> is being looked at more broadly in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=511761">bug 511761</a> by Ben Hsieh with help from Taras and others. There are a bunch of dirty ways to trigger component re-registration and fastload cache invalidation, so I filed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=517515">bug 517515</a> to consolidate these in an explicit manner.</li>
<li>Cold Startup Testing: Drew and Alice made a bunch of progress on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510587">bug 510587</a>,  to create a new Ts that measures cold startup. Alice is working on mobile Talos though, so this is sidelined for a bit. The only issue left is reliable Windows measurement, but we&#39;re not going to block on it, can live with Mac and Linux to start off.</li>
<li>Preference Files: Taras Glek has been working on combining the different preference files into a single one at build time, in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=507288">bug 507288</a>. The patch is there, and is just trying to find a way to land cleanly.</li>
<li><p>Service Caching: Vlad, Drew and Taras are working on caching some services globally for C++ code. For example, 50% of the GetService calls for the IO service originate from NS_NewURI usage. This work is in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=516085">bug 516085</a>.
Projects in a holding pattern:</p>
</li>
<li><p>Startup Timeline: No updates, still not landed. Add [ft] in the whiteboard of your bug w/ the function names you want timed and David will generate it and update the bug.</p>
</li>
<li>PGO for Places, mozStorage and SQLite: Still blocking on Rel-Eng fixing <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=486783">bug 486783</a>, which now has patches!</li>
<li>Static Analysis: No progress on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506128">bug 506128</a>.  David needs to file a bug with the final log of named-yet-uncalled  functions.</li>
<li>Dirty Profile Testing: No progress. Need to list scenarios, file bugs  for each, generate Talos config patches and profile data, and then move  it into Rel-Eng territory. Also, need to get a separate Tinderbox tree,  since it&#39;s going to cause a bazillion new columns.</li>
<li><a href="http://wagerlabs.com/">Joel Reymont</a> noted in<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513076"> bug 513076</a> that there are serious drawbacks to getting our libraries in the dyld  shared cache on Mac, so has deprioritized that work.</li>
<li><a href="http://screwedbydesign.com/blog/2009/09/this-week-in-perf-sep04.php">Ryan  Flint blogged about</a> various front-end improvements he&#39;s working on  that affect startup time.</li>
<li>CSS Parsing Time: Zack says his work in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513149">bug 513149</a> might improve CSS parsing time by 50%, and it&#39;s next on his list.</li>
</ul>
]]></description><link>/2009/09/firefox-startup-performance-weekly-summary-2/index.html</link><guid isPermaLink="true">/2009/09/firefox-startup-performance-weekly-summary-2/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 19 Sep 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance Weekly Summary]]></title><description><![CDATA[<p>Let&#39;s start with the numbers. Vlad spent some time measuring warm startup on the Mac, and it looks very nice: Firefox 3.6 starts up about 10% faster than 3.5, and 3.7 starts up about 20% faster than 3.5. I measured both cold and warm startup on Windows 7, and the picture is not so rosy there. Warm startup is basically flat across 3.5, 3.6 and 3.7, in my tests. Cold startup is... well, weird. Allow me to explain...</p>
<p>My cold startup methodology is simple: On a basically clean install of Windows 7, I&#39;d create a new profile, start the browser up, close it and then reboot. Then I&#39;d measure Firefox startup time after the OS settled. Then I&#39;d do that reboot-and-measure step a bunch more times. Yes, so much fun. I measured Firefox startup time using the method Vlad posted to his blog. This doesn&#39;t do anything to avoid OS optimizations that might persist across reboots, which is a potential flaw, as you&#39;ll see below.</p>
<p>Firefox 3, 3.6 and 3.7 all had consistent numbers across their runs. However, Firefox 3.5 displayed a unique behavior: The first two cold starts were appropriately slow, similar to the cold startup times of the other versions. The subsequent runs were <em>very</em> fast for a cold start! I rebooted a few times, and started other versions a few times, then tried a series of 3.5 runs again... and saw the same thing: the first two runs were in the ballpark of other Firefox versions, but subsequent runs were crazy fast. Vlad was talking earlier in the week about a predictive optimization feature that Windows has, learning from an application&#39;s behavior to optimize it&#39;s performance. Possibly that feature works fantastically with Firefox 3.5, and for whatever reason does not work nearly as well with previous or subsequent versions of the app? I&#39;ve clearly crossed into the realm of fantasy here, so alternate theories are welcome. Perhaps I should round-robin through all versions instead of doing serial runs of the same version.</p>
<p>Firefox 3.5 aside, when measuring cold startup I also see the regression that <a href="http://blog.mozilla.com/adw/2009/09/04/cold-ts/">Drew blogged about</a>. We&#39;ll get a bug filed and help from QA to get a regression range for this.</p>
<p>Status updates:</p>
<ul>
<li>Startup Timeline: Still not landed, and David found that the timeline instrumentation if put in certain places causes major stability issues. As before, he can provide timeline info for you, just point him at the code by putting [ft] in the whiteboard of your bug.</li>
<li>PGO for Places, mozStorage and SQLite: Still blocking on Rel-Eng fixing <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=486783">bug 486783</a>. I still need to connect with John O&#39;Duinn and see if we can move this up in the schedule.</li>
<li>JARification: David started working on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=509755">moving JS modules into a JAR file</a>. Follow along with all JAR-ification via<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513027"> the tracker bug</a>. Alfred Kayser is working on getting <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510844">bug 510844</a> landed, which should increase throughput of JAR file reading.</li>
<li>JS Component Combining: Further effort is probably not worth it, since these components are fastloaded. Removing the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=512827">needless file stats when these are first instantiated</a> is what we need to do. I need to talk to Damon and find a XPConnect/Component-loader person for this.</li>
<li>Static Analysis: No progress on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506128">Bug 506128</a>. David needs to file a bug with the final log of named-yet-uncalled functions.</li>
<li>Dirty Profile Testing: No progress. Need to list scenarios, file bugs for each, generate Talos config patches and profile data, and then move it into Rel-Eng territory. Also, need to get a separate Tinderbox tree, since it&#39;s going to cause a bazillion new columns.</li>
<li>Cold Startup Testing: Drew and Alice made a bunch of progress on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510587">bug 510587</a>, to create a new Ts that measures cold startup. They&#39;re starting with Mac and Linux, and will tackle Windows later. Drew <a href="http://blog.mozilla.com/adw/2009/09/04/cold-ts/">blogged about their work</a> on this.</li>
<li><a href="http://wagerlabs.com/">Joel Reymont</a> noted in<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513076"> bug 513076</a> that there are serious drawbacks to getting our libraries in the dyld shared cache on Mac, so is deprioritizing that work for now.</li>
<li><a href="http://screwedbydesign.com/blog/2009/09/this-week-in-perf-sep04.php">Ryan Flint blogged about</a> various front-end improvements he&#39;s working on that affect startup time.</li>
<li>CSS Parsing Time: Zack says his work in <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513149">bug 513149</a> might improve CSS parsing time by 50%, and it&#39;s next on his list.</li>
</ul>
]]></description><link>/2009/09/firefox-startup-performance-weekly-summary/index.html</link><guid isPermaLink="true">/2009/09/firefox-startup-performance-weekly-summary/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sun, 06 Sep 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance Weekly Roundup]]></title><description><![CDATA[<p>The Firefox and Platform teams were both onsite at the Mountain View office this week, getting some face-to-face time. There was a lot of great conversation and productive interaction between groups. The team of people focusing on application startup time went over all <a href="https://bugzilla.mozilla.org/buglist.cgi?quicksearch=sw:[ts]">the bugs marked [ts]</a>, discussing and prioritizing.</p>
<ul>
<li>Startup Timeline: While the timeline hasn&#39;t landed yet, you can still take advantage of it: David Dahl has an instrumented build, and will provide timeline info for you if you have an area you want to know about. More details on <a href="http://daviddahl.blogspot.com/2009/08/functiontimertimeline-update.html">his post</a>.</li>
<li>PGO for Places, mozStorage and SQLite: Still blocking on Rel-Eng fixing <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=486783">bug 486783</a>. I need to connect with John O&#39;Duinn and see if we can move this up in the schedule.</li>
<li>JAR Transition: Taras landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=508421">bug 508421</a> which allows anything in jar:toolkit.jar!/res/* to be loaded via resource://gre-resources/. This makes it very easy to move individual files into a jar, and access them in a fairly transparent way from code. This helps cold startup, as well as page-load time. He <a href="http://blog.mozilla.com/tglek/2009/08/27/moving-files-into-jars/">posted a HOWTO</a> for taking advantage of this.</li>
<li>JS Component Combining: No progress this week.</li>
<li>Static Analysis: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506128">Bug 506128</a> is wrapping up. David need to file a bug with the final log of named-yet-uncalled functions.</li>
<li>Dirty Profile Testing: No progress. Need to list scenarios, file bugs for each, generate Talos config patches and profile data, and then move it into Rel-Eng territory. Also, need to get a separate Tinderbox tree, since it&#39;s going to cause a bazillion new columns.</li>
<li>Cold Startup Testing: Drew Willcoxon is working on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510587">bug 510587</a>, to create a new Ts that measures cold startup. He&#39;s got patches up for adding head/tail file support to Talos. A new issue that cropped up this week is that the simulated cold-startup methods on Windows don&#39;t appear to work very well, so he&#39;s looking for advice there, as well as looking into reboot support in Talos.</li>
<li><a href="http://wagerlabs.com/">Joel Reymont</a> noticed that Safari&#39;s libs are loaded from the OS&#39;s warm cache, and ours are not! In<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513076"> bug 513076</a> he&#39;s investigating whether or not we can get our dynamic libraries in there as well.</li>
<li>Ryan Flint started looking into taking NSS and spellcheck initialization out of the startup path, and found that Shark says they&#39;re not in it on a regular startup! However, I found a <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=511515">recent bug from Vlad</a> talking about crazy stuff NSS does at startup (aside from the temp file dir skullduggery), so need to figure out how he&#39;s seeing that, and why Shark isn&#39;t.</li>
<li>CSS Parsing Time: <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=91242">Bug 91242</a> says CSS parsing is 5.5% of startup time... in 2001. Taras has mentioned several times that it&#39;s still significant, so asked him for numbers for contemporary builds. <a href="http://zwol.livejournal.com/">Zack Weinberg</a> is working on <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=513149">speeding up parsing using a machine generated lexer</a>, need to get numbers from him on what kind of a difference it makes in parse time.
And if you haven&#39;t yet, read through<a href="http://blog.mozilla.com/tglek/2009/08/20/cleaning-up-startup-disk-io/"> Taras&#39; annotated log of files opened at startup</a>. If you see anything that can be delayed, or want to dig into why a certain file is loaded, let me know! Or just file a bug and put &quot;[ts]&quot; in the bug&#39;s status whiteboard.</li>
</ul>
]]></description><link>/2009/08/firefox-startup-performance-weekly-roundup/index.html</link><guid isPermaLink="true">/2009/08/firefox-startup-performance-weekly-roundup/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[fx-team]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sun, 30 Aug 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Weekly Firefox Startup Performance Roundup]]></title><description><![CDATA[<h2 id="progress">Progress</h2>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=419893">Enabling PGO for SQLite, mozStorage and Places</a>: Found that the trunk unit test boxes have PGO disabled. I&#39;m leery of checking this in without it being properly tested because these components handle so much user data. Next steps: <a href="http://backinblakk.blogspot.com/">Lukas Blakk</a> is working on the infrastructure <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=486783">to enable unit-testing of PGO builds</a>.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=507038">JS Component  Combining</a>: The combined 60,000 line JS file (!!!) has a problem somewhere  in there, causing component registration to fail about 2/3 of the way through. Next steps: Get all the components registering, get numbers on  a few platforms to gauge the effect.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=480735">Startup Timeline</a>: No progress. Vlad said it was land-able, earlier in the week. Next steps: Figure out what needs to happen here to finalize and land. David needs to un-rot the instrumentation patch once the timeline lands (rots quickly).</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510309">XPT Linking</a>: Landed! However, really only helps cold startup, which we don&#39;t currently measure. Next steps: Once cold startup testing is available, disable and re-enable to get actual numbers on the effect.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506128">Static  Analysis</a>: No progress, David was out part of the week, and was  working on unblocking the dirty profile tests (details below). Next  steps: Reduce false positives in the dead-code finder, and run against  the full browser context.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=414660">Dirty Profile Testing</a>: Due to a ton of hard work from Alice, dirty profiling of Ts was enabled on mozilla-central! They are the boxes suffixed &quot;dirty&quot; on the tree, currently testing Ts and Ts-shutdown for profiles with small and medium places.sqlite files on all platforms. Data is available for these tests on the graph server - you can see the effect of Vlad&#39;s landing of <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506470">bug 506470</a> on startup for a profile with a medium-sized places.sqlite file on <a href="http://graphs.mozilla.org/#tests=[{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22170%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22171%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22172%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22173%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22174%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22175%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22176%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22177%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22178%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22179%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22181%22},{%22test%22:%2253%22,%22branch%22:%221%22,%22machine%22:%22182%22}]">this graph</a>. Next steps: get various other dirty profile scenarios detailed, file bugs and get in the pipe. Figure out tree pollution issues.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510587">Cold-startup Testing</a>: Ts throws out the max value of it&#39;s ten runs, so we don&#39;t have a measurement of how long browser takes to initially startup. Drew, with help from Alice, has started working on the Talos changes necessary to get this measurement up and running. We&#39;ve got <a href="https://wiki.mozilla.org/Firefox/Sprints/Startup_Time_Improvements#Tips.2C_Tools">methods for simulated cold startup</a> from Vlad, Rob Arnold and others<a href="https://wiki.mozilla.org/Firefox/Projects/Startup_Time_Improvements_Notes#Rob_Arnold_notes_on_simulated_cold_startup_on_Windows"></a>. Next steps: Implement support for head/tail scripts for Talos tests, write those scripts for cold startup for all platforms, hand off to rel-eng for deployment.</li>
<li><a href="http://wagerlabs.com/">Joel  Reymont</a> started working on Firefox performance on Mac, and posted <a href="http://wagerlabs.com/post/168237170/faster-mac-firefox">a  comparison of dynamic linking time for Firefox and Safari</a>, and started <a href="https://wiki.mozilla.org/Firefox/Projects/Startup_Time_Improvements/joelr_notes">posting notes on his methodology on the wiki</a>.</li>
<li><a href="http://blog.vlad1.com/">Vlad</a> landed <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506470">bug 506470</a>, which delays the initialization of Growl on Mac, winning 7.5% on Ts. As seen above, it&#39;s a win on dirty profiles without Growl as well as regular Ts (empty profile).</li>
<li><a href="http://blog.mozilla.com/tglek/2009/08/20/cleaning-up-startup-disk-io/#more-173">Taras Glek posted</a> a summary of ways to spend less time in disk IO at startup, the performance characteristics of IO on restricted devices, and a log of files opened at startup.</li>
</ul>
<h2 id="further-reading">Further Reading</h2>
<ul>
<li><a href="https://wiki.mozilla.org/Firefox/Sprints/Startup_Time_Improvements">Startup Project wiki</a></li>
<li><a href="http://blog.mozilla.com/adw/2009/08/21/firefox-startup-2/">Drew&#39;s post for this week</a></li>
<li>Taras&#39; post <a href="http://blog.mozilla.com/tglek/2009/08/20/cleaning-up-startup-disk-io/#more-173">listing files opened on startup</a>
[UPDATE: Added Taras&#39; post, and a link to Joel&#39;s notes.]</li>
</ul>
]]></description><link>/2009/08/weekly-firefox-startup-performance-roundup-2/index.html</link><guid isPermaLink="true">/2009/08/weekly-firefox-startup-performance-roundup-2/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 22 Aug 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Performance: The "don't touch the damn disk" edition.]]></title><description><![CDATA[<p>I mentioned in previous blog posts that the clearest message that has come out of the Firefox startup performance research is that most of the time starting the application is spent loading and reading files from disk. On some platforms, file IO is far more expensive than others - this hurts startup time especially bad on Mac, and on mobile devices. This post highlights some work that <a href="http://blog.mozilla.com/tglek/" title="Blog">Taras Glek</a> has done to reduce file IO in Firefox (and other Mozilla applications) by improving the way we package collections of files and directories into JAR files.</p>
<p>First, he resurrected an <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=201224">older idea</a>, modifying our JAR file reader to <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=504864">map the contents of JAR files into memory</a> using <a href="http://en.wikipedia.org/wiki/Mmap">mmap</a>. He then <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=468011">combined a bunch of smaller JAR files</a> into two bigger files: browser.jar and toolkit.jar. These changes provide a few benefits:</p>
<ul>
<li>Our reader was stat&#39;ing the JAR file each time that it read something from inside. The mmap change reduces the system calls necessary to read all the smaller files from inside our JAR files.</li>
<li>Fewer JAR files means files are fewer places on disk, and the initial JAR finding, opening and reading system calls happen fewer times.</li>
<li>By combining files inside a large JAR, they&#39;re placed contiguously on disk, allowing the smaller files inside of the JARs to be found and read much quicker.
The effects of these changes were significant. The landing of the JAR-combining change resulted in some fabulous graphs, shown below, along with comments to highlight the good bits.</li>
</ul>
<p>[caption id=&quot;attachment_387&quot; align=&quot;aligncenter&quot; width=&quot;540&quot; caption=&quot;Tp3 Graphs&quot;]<a href="taras_tp3.png"><img src="http://autonome.files.wordpress.com/2009/08/taras_tp3.png" alt="Tp3 Graphs" title="Tp3 Graphs"></a>[/caption]</p>
<p>Tp3 is a page loading test - it cycles through 400 pages from the Alexa Top 500 list from 2006, measuring how long it takes to open each page. As you can see on the graph, the time it took to complete the test went down by about 6.5% on Leopard, 9% on Linux, 2.5% on Tiger, 11% on Windows XP, and a clear downward trend on Vista, where the noise level is a bit too high to get a number.</p>
<p>[caption id=&quot;attachment_388&quot; align=&quot;aligncenter&quot; width=&quot;540&quot; caption=&quot;Tp4 Graphs&quot;]<a href="taras_tp4.png"><img src="http://autonome.files.wordpress.com/2009/08/taras_tp4.png" alt="Tp4 Graphs" title="Tp4 Graphs"></a>[/caption]</p>
<p>Tp4 is the successor to Tp3, and cycles through 100 of the Alexa Top 500, from 2009. The time to run the test improved by 3.5% on Leopard, 7.8% on Linux, 2.5% on Tiger, 6% on Windows XP, and again Vista clearly improved, but the noise level is too high to easily figure out by how much.</p>
<p>[caption id=&quot;attachment_389&quot; align=&quot;aligncenter&quot; width=&quot;540&quot; caption=&quot;Ts Graphs&quot;]<a href="taras_ts.png"><img src="http://autonome.files.wordpress.com/2009/08/taras_ts.png" alt="Ts Graphs" title="Ts Graphs"></a>[/caption]</p>
<p>Ts is a basic browser startup test - it measures the average time to start the browser up. There&#39;s no clear startup win visible here, except perhaps on Vista. There&#39;s maybe even a slight loss on Mac. However, if you look closer, you&#39;ll notice that the graphs for Linux and Vista and Windows XP are all much less <em>noisy</em>! The absolute wall clock time did not decrease, but the variation in startup time decreased significantly on those platforms. An upside to this is that true performance improvements and regressions on those platforms will be easier to spot.</p>
<p>[caption id=&quot;attachment_390&quot; align=&quot;aligncenter&quot; width=&quot;540&quot; caption=&quot;Txul Graphs&quot;]<a href="taras_txul.png"><img src="http://autonome.files.wordpress.com/2009/08/taras_txul.png" alt="Txul Graphs" title="Txul Graphs"></a>[/caption]</p>
<p>The same effect is seen in the tests measuring how long it takes to open a new XUL window. There&#39;s maybe a slight improvement on Windows, and a regression on Tiger, but the level of noise on every platform has decreased, some down near zero variation between runs.</p>
<p>The improvement in page-load time from Taras&#39; changes is quite clear. There&#39;s work in progress to <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510611">make the JAR IO even more efficient</a>, as well as putting <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=509755">additional</a> <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=508421">directories</a> of small files into the JAR files. You can follow progress and get even more details on <a href="http://blog.mozilla.com/tglek/">Taras&#39; blog</a>.</p>
]]></description><link>/2009/08/firefox-performance-the-dont-touch-the-damn-disk-edition/index.html</link><guid isPermaLink="true">/2009/08/firefox-performance-the-dont-touch-the-damn-disk-edition/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[startup]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Tue, 18 Aug 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Weekly Firefox Startup Performance Roundup]]></title><description><![CDATA[<p>Here&#39;s a summary of all the startup-related work going on. Other people on the team are also blogging updates on their individual projects:</p>
<ul>
<li>Ryan Flint: <a href="http://screwedbydesign.com/blog/2009/08/this-week-in-perf-aug14.php">This Week in Perf - Aug. 14th Edition</a></li>
<li>David Dahl: <a href="http://daviddahl.blogspot.com/2009/08/looking-for-dead-code.html">Looking for Dead Code</a></li>
<li>Drew Willcoxon: <a href="http://blog.mozilla.com/adw/2009/08/14/startup/">Startup</a>
As usual, for the details, check out the <a href="https://wiki.mozilla.org/Firefox/Projects/Startup_Time_Improvements" title="Startup Improvements wiki">Startup Project wiki page</a>.</li>
</ul>
<h3 id="progress">Progress</h3>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=419893">PGO for SQLite, MozStorage and Places</a>: Landed on the Places branch. The test failures seen when PGO first landed are not there (yay), but the Talos boxes don&#39;t show any clear wins (boo).</li>
<li>Dead Code Hunting: Even though he&#39;s supposed to be on vacation, David has got the full browser.xul environment pulled in for analysis. More info in his post (linked above). Still a lot of false-positives in the detection code.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=480735">Startup timeline</a>: Vlad&#39;s been working with the NSPR owner, and the latest patch has review, so almost there.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=507038">XPCOM component combining</a>: No progress from me, but Florian Quèze <span></span>attached a shell script to knit the components together!</li>
<li>XPT Linking on Mac: Drew has confirmed big wins from this, split it off into it&#39;s <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=510309">own bug</a>. More detailed notes from him on his <a href="https://wiki.mozilla.org/Firefox/Projects/Startup_Time_Improvements/adw_notes">wiki page.</a></li>
<li><p>JARification</p>
<ul>
<li>Taras&#39; <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=504864">core IO improvements to how JAR file contents are read</a> have landed, as well as the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=468011">combining of all chrome into browser and toolkit JARs</a> (this morning!).</li>
<li>Ryan is looking at putting the components directory into a JAR so that it reaps the same benefits as the chrome directories.</li>
</ul>
</li>
<li><p>Testing/Measurement</p>
<ul>
<li>Met with Alice to talk about various test scenarios, and the deployment process</li>
<li>Started a guide for <a href="https://wiki.mozilla.org/Testing/Talos/NewTests" title="Creating a new Talos test">taking a Talos test from idea to production</a></li>
<li>Initial steps on automatedly testing cold-startup, figuring out platform-specific calls, and what Talos changes are needed</li>
<li>Discussing approaches to micro-benchmarking the browser UI</li>
</ul>
</li>
</ul>
<h3 id="next-steps">Next Steps</h3>
<ul>
<li>Enable PGO on mozilla-central, get nightly tester feedback</li>
<li>Once the startup timeline lands, get an actual timeline to analyze</li>
<li>Reduce false-positives on the dead-code report, document installation and usage, develop plan for continuous integration</li>
<li>Work with Ted to get a patch for JS component combining into the packaging process</li>
<li>Figure out if there&#39;s a win in jar&#39;ing /components or if we just need to fix fastload to not touch the files as much</li>
<li>Get XPT linking landed</li>
<li>File bugs and get the Talos changes in Alice&#39;s queue for cold-startup testing</li>
<li>Finish the Talos test development guide</li>
<li>Talk with Ryan Doherty about the reporting side of microbenchmarking
[UPDATE: added Drew&#39;s blog post]</li>
</ul>
]]></description><link>/2009/08/weekly-firefox-startup-performance-roundup/index.html</link><guid isPermaLink="true">/2009/08/weekly-firefox-startup-performance-roundup/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 15 Aug 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Firefox Startup Performance]]></title><description><![CDATA[<p>A team of Firefox developers and others are working on making Firefox startup faster. Per <a href="http://beltzner.ca/mike/2009/08/07/firefox-team-weekly-roundups-planning-sprinting-and-reporting/">Mike Beltzner&#39;s post</a>, we&#39;ll be updating our status weekly. Here&#39;s the status of what the team did this week, as well as pointers to some other work going on. The list here highlights major points, but is not complete. Many more details of these projects, as well as other areas for investigation can be found on the <a href="https://wiki.mozilla.org/Firefox/Sprints/Startup_Time_Improvements">wiki page</a>, and on <a href="http://blog.vlad1.com/">Vlad</a> and <a href="http://blog.mozilla.com/tglek/">Taras&#39;</a> blogs.</p>
<p><strong>Status</strong></p>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=507101">XPCOM component combining</a> (Dietrich): Manually combined a bunch of files, and found improvements in sub 100ms, but varying results, so going to check-in to the Places branch temporarily to get better  numbers. Writing a script to hook into the build system to knit the components together automatically, but need better numbers before going further.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=419893">Enabling PGO for SQLite, mozStorage and Places</a> (Dietrich): Made a patch to re-enable PGO for these, and checked into the Places branch. Currently there are unit tests failing, but they look unrelated. Need to trigger more runs to ensure that&#39;s the case. Performance numbers are not definitive, need more runs to complete.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=506128">Dead code  hunting with JSHydra</a> (DDahl): Have basic code for function finding,  making progress on code for building JS context for chrome URIs. (props  for help from taras, humph, jcranmer in #static)</li>
<li>Combining XPT files on Mac (Drew): Potentially significant gain of a few seconds on startup, investigation continuing.</li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=480735">Startup Timeline</a> (Vlad, DDahl): This is still in review.</li>
<li><p><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=504864">Combining jar files</a> (Taras): This is ready to check-in (again).
<strong>Next Steps</strong></p>
</li>
<li><p>Confirm numbers for combining JS components, finish script to automate combining, work with Ted to hook it into the packaging process, see if any modules can be combined.</p>
</li>
<li>Find out why tests are failing for PGO and quantify gain/loss when the slow tinderboxen finally report some numbers.</li>
<li>Get the startup timeline reviewed, landed and start adding markers and performing analysis.</li>
<li>Investigate why wall-clock time of combined jars doesn&#39;t decrease.</li>
<li>Get full browser JS context working in JSHydra, write the uncalled-function script, file dead-code bugs, get it plugged into continuous integration on tinderbox.</li>
<li>Get <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=475289">bug 475289</a> and <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=499123">bug 499123</a> landed, further reducing IO and component registration time spent at startup.</li>
</ul>
]]></description><link>/2009/08/firefox-startup-performance/index.html</link><guid isPermaLink="true">/2009/08/firefox-startup-performance/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[fx-team]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sat, 08 Aug 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Open Web Games]]></title><description><![CDATA[<p>BarCamp, to re-appropriate David Cross&#39;s magnificent descriptive powers, is like an earthquake wrapped in a hurricane, nestled in a box of tsunamis. I previously blogged about the <a href="http://autonome.wordpress.com/2009/05/08/portland-firefox-developers-meetup/">Portland Firefox Developers</a> group that emerged from BarCampPortland 3. However, there was yet another fantastic birthing there: the <a href="http://groups.google.com/group/openwebgames">Open Web Games group</a>.</p>
<p><a href="http://twitter.com/alainbloch">Alain Bloch</a> scheduled a session called Developing Non-Flash Web-based Games. A bunch of people attended, probably three times what would&#39;ve fit in the room it was supposed to be in, so it was held in a row of cubicles, with most people standing.</p>
<p>It was a great discussion, covering <a href="https://developer.mozilla.org/en/HTML/Canvas">canvas</a>, <a href="http://get.adobe.com/flashplayer/">Flash</a>, <a href="http://blog.vlad1.com/canvas-3d/">Canvas3D</a>, <a href="http://code.google.com/apis/o3d/">O3D</a>, <a href="http://silverlight.net/">Silverlight</a>, <a href="http://unity3d.com/unity-web-player-2.x.html">Unity</a>, <a href="http://jquery.com/">JQuery</a>, iPhone gaming, and a lot of talk about existing Web-based games. Check out the <a href="http://2009.barcampportland.com/notes/ene">notes from the session</a> for logs of the talk. There was a lot of interest in building libraries for different gaming models and interactions, to ease the building of games on the Web.</p>
<p>The talk was way too short, and at the end it was clear there was interest in building a proof-of-concept game using canvas and other HTML5 technologies. So to further that effort, and to continue the brainstorming on building games using the open Web, we created the <a href="http://groups.google.com/group/openwebgames">OpenWebGames</a> group on Google Groups. Join us in finding ways to make the Web more funnerer than ever!</p>
<p>If you&#39;re coming to the <a href="http://opensourcebridge.org/">Open Source Bridge conference</a> in Portland Oregon from June 17-19, the group is getting together to sprint on development of a game at the <a href="http://opensourcebridge.org/wiki/Hacker_Lounge">OSB Hacker Lounge</a>. Even you&#39;re not attending, if you have ideas for a game to sprint on, or want to join in online, <a href="http://groups.google.com/group/openwebgames">join the group</a>!</p>
]]></description><link>/2009/06/open-web-games/index.html</link><guid isPermaLink="true">/2009/06/open-web-games/index.html</guid><category><![CDATA[canvas]]></category><category><![CDATA[firefox]]></category><category><![CDATA[games]]></category><category><![CDATA[Gaming]]></category><category><![CDATA[html5]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Tue, 02 Jun 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Streaming Your iSight Camera to the Web with the Video Tag]]></title><description><![CDATA[<p>I wanted to do a demonstration of live streaming using the <a href="https://developer.mozilla.org/en/html/element/video"><video/> tag</a> for <a href="http://opensourcebridge.org/sessions/251">my talk at the upcoming Open Source Bridge conference</a>; maybe a stream a surprise guest in, do some audience interaction, something fun. I figured the easiest way to test the streaming myself would be to use the webcam in my MacBook Pro&#39;s built-in iSight camera.</p>
<p>I pinged <a href="http://weblogs.mozillazine.org/asa/">Asa</a> to get details about how he streams <a href="http://air.mozilla.com/">Air Mozilla</a>, which brought Icecast into the picture. I found some old posts about using VLC on Linux to capture the external iSight, so tried it... but no dice, the capture module barfed when trying to talk to the camera. VLC ships with a capture module for the iSight, but hasn&#39;t been updated to work with the internal iSight. Bah. VLC also supported transcoding to Ogg Theora, as well as streaming to Icecast servers, so it really seemed like it&#39;d provide just about everything, if it only supported the camera.</p>
<p>I looked up the error I got from VLC, posted on the VLC forums, no answers. So I emailed the author of VLC&#39;s Quicktime module, <a href="http://www.ohloh.net/accounts/pdherbemont">Pierre d&#39;Herbemont</a>, at the email he left in the source file. After a couple of emails, and less than 24 hours later, <a href="http://git.videolan.org/?p=vlc.git;a=commitdiff;h=d032b62bfaada60a4f3e0b3b2a5a71f65bf8eea9">he&#39;d checked in a fix</a>. Open source FTW. Thanks Pierre.</p>
<p>The steps to get it working are enumerated below. At some point, the VLC fix will ship, but until then you&#39;ll need to use nightly builds.</p>
<p>Install and configure the Icecast2 server:</p>
<ol>
<li>Install <a href="http://www.macports.org/">MacPorts</a></li>
<li>In the Terminal: sudo port install icecast2. This installs everything into various dirs in /opt/local.</li>
<li>Edit /opt/local/etc/icecast.xml, set user/group it runs as (for logfiles, i set mine to _www, same as Apache), and change the default passwords in the authentication section.</li>
<li>Set permissions on /opt/local/var/log/icecast to be writable by the user you configured Icecast to run as.</li>
<li>In the Terminal, start the server: sudo icecast -c /opt/local/etc/icecast.xml -b</li>
<li>Test your install by checking the server&#39;s status at <a href="http://localhost:8000/status.xsl">http://localhost:8000/status.xsl</a></li>
<li><p>Watch the log in the Terminal: tail -f opt/local/var/log/icecast/error.log (Useful for confirming VLC access, as well as catching authentication problems)
Start the stream:</p>
</li>
<li><p>Download and install the most recent <a href="http://nightlies.videolan.org/build/macosx-intel/?C=M%3BO=D">VLC nightly build</a></p>
</li>
<li>Open the terminal, and execute the command below</li>
<li>Open <a href="http://localhost:8000/stream/isight">http://localhost:8000/stream/isight</a> with Firefox 3.5b4 (or newer)
VLC Command (all one line):</li>
</ol>
<p>/Applications/VLC.app/Contents/MacOS/VLC qtcapture:// --sout=&quot;#transcode{vcodec=theora,vb=256,venc=theora,acodec=vorbis,ab=64,aenc=vorbis}: standard{access=shout,mux=ogg,dst=source:yourpassword@localhost:8000/stream/isight}&quot;</p>
<p><img src="picture-211.png" alt="screenshot" title="screenshot"></p>
<p>It&#39;s still not quite ready for practical use:</p>
<ul>
<li>There&#39;s still some size distortion, maybe I have the aspect ratio wrong or something</li>
<li>Still working on sound</li>
<li>Lag is pretty bad</li>
</ul>
]]></description><link>/2009/06/streaming-your-isight-camera-to-the-web-with-the-video-tag/index.html</link><guid isPermaLink="true">/2009/06/streaming-your-isight-camera-to-the-web-with-the-video-tag/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[icecast]]></category><category><![CDATA[isight]]></category><category><![CDATA[Mac]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[ogg]]></category><category><![CDATA[openvideo]]></category><category><![CDATA[theora]]></category><category><![CDATA[vlc]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Mon, 01 Jun 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Portland Firefox Developers Meetup]]></title><description><![CDATA[<p>One of the cool folks I met at <a href="http://barcampportland.org">BarCampPortland 3</a> was <a href="http://twitter.com/stechz">Benjamin Stover</a>. He works at <a href="http://vidoop.com/">Vidoop</a>, and is the developer of <a href="http://ineedtoreadthis.com/">ineedtoreadthis.com</a>. We were talking at BarCamp about how there&#39;s a lot of Firefox extension development going on, but usually by lone individuals. For instance, many of the extension developers I interact with say the same thing: &quot;Yeah, I&#39;m <em>the</em> person at my company who&#39;s in charge of the extension&quot;. And while there&#39;s a lot of great online resources for extension developers, there&#39;s no local group or meet-up specific to development using the Mozilla platform.</p>
<p>Hence the PDX Firefox Developers Group! If you&#39;re interested in developing Firefox extensions, or hacking Firefox itself, or are already doing so, come out and meet others doing the same. For the first meeting, Ben is going to talk about his <a href="http://groups.google.com/group/pdx-firefox-dev/msg/40b71d5ab74c0db9">unit test framework for extensions</a>, and I&#39;m going to talk about <a href="http://ubiquity.mozilla.com/">Ubiquity</a>, a Mozilla Labs project. I&#39;d like it to be more focused on the hacking than lecturing, so bring your laptop! For example, I&#39;ll walk through the process of writing a new Ubiquity command. Join the <a href="http://groups.google.com/group/pdx-firefox-dev">PDX-Firefox-Dev Google group</a> for ongoing talk about Firefox and Mozilla hacking, or if you have topics you&#39;d like to talk about at the meet-ups.</p>
<p>The group is meeting on the second Wednesday of the month. The first meeting is next Wednesday, May 13th, and is taking place at <a href="http://www.nedspace.com/">Nedspace</a> (directions below) at 7pm. We&#39;ll probably roll somewhere near for drinks afterwards. Please <a href="http://upcoming.yahoo.com/event/2620820/">RSVP on Upcoming</a>.</p>
<p>Portland Firefox Developers Group, May 13 at 7pm at Nedspace</p>
<p>[googlemaps <a href="http://maps.google.com/maps?f=q&amp;source=s_q&amp;hl=en&amp;geocode=&amp;q=920+SW+Third+Portland,+OR+92704&amp;sll=45.518828,-122.675681&amp;sspn=0.01747,0.038624&amp;ie=UTF8&amp;t=h&amp;z=14&amp;iwloc=A&amp;ll=45.525352,-122.671967&amp;output=embed&amp;w=425&amp;h=350">http://maps.google.com/maps?f=q&amp;source=s_q&amp;hl=en&amp;geocode=&amp;q=920+SW+Third+Portland,+OR+92704&amp;sll=45.518828,-122.675681&amp;sspn=0.01747,0.038624&amp;ie=UTF8&amp;t=h&amp;z=14&amp;iwloc=A&amp;ll=45.525352,-122.671967&amp;output=embed&amp;w=425&amp;h=350</a>]</p>
]]></description><link>/2009/05/portland-firefox-developers-meetup/index.html</link><guid isPermaLink="true">/2009/05/portland-firefox-developers-meetup/index.html</guid><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[meetup]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[oregon]]></category><category><![CDATA[portland]]></category><category><![CDATA[portland]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Fri, 08 May 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Front-end Performance in Firefox 3.5 and Beyond]]></title><description><![CDATA[<p>One of the major changes in Firefox 3 was the amount of browsing history saved. In Firefox 2, the default amount of history saved was 9 days, so just over a week. The default in Firefox 3 is 180 days. Or 6 months. Or <em>20 times</em> the amount that Firefox 2 stored. However you slice it, it&#39;s a far greater amount of data than was previously stored. An example benefit is that we can use this set of data to more accurately predict what you&#39;re searching for in the Awesomebar. However, the challenge is to keep the browser <em>fast</em>, at least as fast as if we still only stored 9 days, and not only in the Awesomebar, but everywhere and anywhere that this data is exposed.</p>
<p><a href="https://wiki.mozilla.org/Firefox3.5">Firefox 3.5</a> contains a large number of internal changes to how we store, manage and display this data, in order to improve performance. <a href="http://twitter.com/sdwilsh" title="Shawn on Twitter">Shawn Wilsher</a> and <a href="http://twitter.com/mak77" title="Marco on Twitter">Marco Bonardo</a> spent an immense amount of time and effort altering almost every SQL query in <a href="https://wiki.mozilla.org/Places">Places</a>, the bookmark and history infrastructure, so that it no longer needs to write to the database every time you visit a page, a project <a href="http://shawnwilsher.com/archives/168">well</a> <a href="http://shawnwilsher.com/archives/169">chronicled</a> <a href="http://shawnwilsher.com/archives/170">on</a> <a href="http://shawnwilsher.com/archives/172">Shawn&#39;s</a> <a href="http://shawnwilsher.com/archives/242">blog</a>. Spurred on by one of <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=478097">Shawn&#39;s performance wins</a>, <a href="http://ed.agadak.net/" title="Ed">Ed Lee</a> was able to drastically <a href="http://ed.agadak.net/2009/02/looking-for-location-bar-perf-testers">speed up searching in the Awesomebar</a>. Even now, we&#39;re working on changes that will vastly improve the performance of the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=488966">history menu</a>, sidebar, and smart folders, as well as just <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=490664">browsing around the Library</a>. To try out some of these changes, <a href="http://www.mozilla.com/en-US/firefox/all-beta.html" title="Firefox 3.5 Beta 4">download the latest beta of Firefox 3.5</a>.</p>
<p>This work has been aided by better visibility and diagnosis of performance regressions due to tools such as <a href="http://developer.apple.com/tools/sharkoptimize.html">Shark</a> and <a href="https://wiki.mozilla.org/Performance/Optimizing_JavaScript_with_DTrace">DTrace</a>, and all the work <a href="http://alice.nodelman.net/blog/">Alice</a> and others have done in performance monitoring on Tinderbox. Also, Shawn&#39;s work on <a href="https://developer.mozilla.org/en/Storage">mozStorage</a>, the SQLite interface in Firefox, has provided us with reporting of <a href="http://shawnwilsher.com/archives/251">poorly performing queries</a> in debug builds.</p>
<p>A recent effort to gather real world usage data is the <a href="https://places-stats.mozilla.com/">Places Statistics project</a>, run by <a href="http://blog.mozilla.com/adw/">Drew Willcoxon</a> and <a href="http://daviddahl.blogspot.com/">David Dahl</a>. Drew created a script that culled statistical information about browsing behavior from the database that stores a user&#39;s history and bookmarks. Users who wish to participate can anonymously submit their statistics to a website that aggregates the data. David wrote a Python tool that generates databases based on the aggregate data, that we can use as canonical datasets to test against. One of the first ways we&#39;ll put this data to use is to run our current <a href="https://wiki.mozilla.org/Performance:Tinderbox_Tests">performance test suite</a> against minimum, average and maximum sized databases generated by this tool.</p>
<p>Firefox will never be fast enough, so the work continues into <a href="https://wiki.mozilla.org/Firefox/Namoroka">Firefox.next</a>. We&#39;re using <a href="https://developer.mozilla.org/en/Storage#Asynchronously">asynchronous SQL queries</a> to move more database activity into the background, so as to not block the browser UI. This will surface in the Awesomebar (testable via <a href="http://shawnwilsher.com/archives/255">Shawn&#39;s extension</a>) and <a href="http://blog.mozilla.com/adw/">Drew Willcoxon&#39;s</a> work on the <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=490714">Places query system</a>.</p>
<p>You can help: If you think something is too slow, please <a href="https://bugzilla.mozilla.org/enter_bug.cgi">file a bug</a>, and add &quot;[TSnappiness]&quot; to bug&#39;s whiteboard field, or in your report. Here&#39;s the current <a href="https://bugzilla.mozilla.org/buglist.cgi?quicksearch=tsnappiness">list of TSnappiness bugs</a>.</p>
<p>[UPDATE: Thanks jst for pointing out my humble interpretation of 180 days as only 3 months]</p>
]]></description><link>/2009/05/front-end-performance-in-firefox-35-and-beyond/index.html</link><guid isPermaLink="true">/2009/05/front-end-performance-in-firefox-35-and-beyond/index.html</guid><category><![CDATA[Awesomebar]]></category><category><![CDATA[Bookmarks]]></category><category><![CDATA[firefox]]></category><category><![CDATA[firefox]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[mozilla]]></category><category><![CDATA[Performance]]></category><category><![CDATA[Places]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Wed, 06 May 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[What this isn't.]]></title><description><![CDATA[<p>It&#39;s not a blog post about how I don&#39;t blog enough. That&#39;s exactly what it&#39;s not.</p>
<p><a href="http://www.brinkhurstdesign.co.uk/mozilla/easter/hunter/found/13/"><img src="" alt="Hidden Egg"></a></p>
]]></description><link>/2009/04/what-this-isnt/index.html</link><guid isPermaLink="true">/2009/04/what-this-isnt/index.html</guid><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Fri, 10 Apr 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[The Magic is in the Tubes]]></title><description><![CDATA[<blockquote>
<p>&quot;The gains shown by the iPhone and Android show what is possible when phones are built with fully capable browsers and support a rich array of Web apps.&quot; - <a href="http://www.techcrunch.com/2009/03/24/iphone-now-50-percent-of-smartphone-web-traffic-in-the-us/" title="Techcrunch - iPhone Makes Up 50 Percent of Smartphone Web Traffic In U.S., Android Already 5 Percent">Techcrunch</a>
The most kick-ass mind-blowing iPhone, Crackberry or it&#39;s-not-a-Google-phone is naught but a brick without an always-on ubiquitous wireless internet connection.*</p>
</blockquote>
<p>Apple may have revolutionized the user-experience of the smartphone, but the Blackberry&#39;s early success proved that the crux of the device&#39;s addictiveness lies in the tubes.</p>
<ul>
<li>That&#39;s not entirely correct. You could still use <a href="http://ifartmobile.com/">this</a>.</li>
</ul>
]]></description><link>/2009/03/the-magic-is-in-the-tubes/index.html</link><guid isPermaLink="true">/2009/03/the-magic-is-in-the-tubes/index.html</guid><category><![CDATA[android]]></category><category><![CDATA[Apple]]></category><category><![CDATA[iphone]]></category><category><![CDATA[mobile]]></category><category><![CDATA[techcrunch]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Wed, 25 Mar 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Seven Things About Me(me)]]></title><description><![CDATA[<p>Alas, I was tagged by <a href="http://www.beltzner.ca/mike/archives/2009/01/meme-too.html" title="Cap">Beltzner</a>, so must break my new year&#39;s resolution to not blog in 2009*. Thanks Mike. Seven things you may know about me, or not:</p>
<ol>
<li>I have three nipples. Of these, zero produce milk.</li>
<li>I was a barista and a chef for many years before owning a computer.</li>
<li>I can juggle. Balls. Clubs. Machetes. Torches. (Listed in descending order of skill-level and recency.)</li>
<li>Some years ago, on the night before we moved from Seattle to Florida, someone stole our fully-packed truck and U-Haul, leaving us with nothing but the pajamas we were wearing, and a goldfish. It was a lesson in <a href="http://en.wikipedia.org/wiki/Impermanence">impermanence</a>.</li>
<li>I used to play the accordion, and was briefly in a band called Apolkalypse.</li>
<li>One summer, I hitchhiked through 30 states with a friend. You&#39;ve not truly seen America until it throws garbage at you from it&#39;s car.</li>
<li><p>I flew out of a rapidly moving Volkswagen bus when I was 8 years old, and landed on my head. I know what you&#39;re thinking, and yes, you&#39;re probably right.
Seven from me, seven to you:</p>
</li>
<li><p><a href="http://shawnwilsher.com/">Sdwilsh</a>. It&#39;s all business on your blog, but <a href="http://quotes.burntelectrons.org/search?query=tag%3Asdwilsh&amp;start=10">your quotes</a> are on fire.</p>
</li>
<li><a href="http://blog.sandmill.org/">Thunder</a>, the Venezuelan ramen-lover. (Definitely a character in my novel. If I was writing one.)</li>
<li><a href="http://twitter.com/joshayala">Josh</a>. I thought <a href="http://www.badempire.com/">your blog was dead</a>, but then I found the <a href="http://josh.badempire.com/">tumble</a>.</li>
<li><a href="http://twitter.com/jvh">Jeff</a>, you don&#39;t blog, afaik. You should tweet seven things and seven people!</li>
<li><a href="http://bowiesdive.blogspot.com/">Bowie</a>. Kid, you&#39;re almost one full year old. Introduce yourself.</li>
<li><a href="http://www.litfuel.net/plush/">James Earl Plush</a>. Eagles? Beagles? Twins? Coincidence? I think not!</li>
<li><a href="http://www.bobanddavid.com/david.html">David Cross</a>. (Aim high, right?)</li>
<li>I&#39;ve been <a href="http://dietrich.tumblr.com/">tumbling</a> and <a href="http://twitter.com/dietrich">tweeting</a> regularly, so I kinda already broke my resolution.</li>
</ol>
]]></description><link>/2009/01/seven-things-about-meme/index.html</link><guid isPermaLink="true">/2009/01/seven-things-about-meme/index.html</guid><category><![CDATA[me]]></category><category><![CDATA[meme]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Sun, 11 Jan 2009 00:00:00 GMT</pubDate></item><item><title><![CDATA[Adventures in Spanish Cooking]]></title><description><![CDATA[<p>We had <a href="http://www.adamduvander.com/" title="Adam">Adam</a> and his fam over for dinner on Monday night, for a Spanish food fest. Adam&#39;s brother-in-law was interested in learning some cooking technique, so I chose a menu that would cover a lot of different areas. He has the knack for sure, easily flipping a Spanish tortilla even! I had him do most of the actual cooking, with me just directing and drinking the gin and tonics (12 Bridges, PDX REPRESENT YO!).</p>
<p>Tapas</p>
<ul>
<li>yellow tomatoes (from the garden!) with a little salt and roasted paprika sprinkled on top</li>
<li>cubed manchego and fresh mozzarella (yeah, i know, but i like the hard/soft contrast) marinated in olive oil, fresh thyme, basil and chives (all from the garden!), cracked pepper and chili flakes</li>
<li>rainbow carrots lightly pickled in red wine vinegar, garlic (from the garden!), cumin, oregano and olive oil</li>
<li>marcona almonds
Spanish Tortilla</li>
</ul>
<p>I usually prepare this by par-boiling the potatoes, but this time we did it up proper by first frying them in olive oil and garlic and then adding to the egg mixture and moving to the pan... again with much olive oil, to get a real nice crisp to the edge. We added minced serrano ham and fine-diced jalapenos (from the garden!), so it came out with a nice aroma and a bit of kick. We made three pans of it, so I&#39;ve been enjoying it for breakfast ever since ;)</p>
<p>True Cod and Clams in Salsa Verde</p>
<p>Earlier in the afternoon I made a stock with onions, garlic, carrot, some rockfish I had in the freezer, some plum tomatoes (I bet you can guess where from...), mussels, flat-leaf parsley and white pepper. This became the base for a sauce somewhat like zarzuela, but with white wine instead of brandy, so giving the dish more of a high note. The cod was first rubbed-down with salt and white pepper, then lightly floured and fried, and then cooked the rest of the way in the sauce. Then came peas, flat-leaf parsley, and when the fish is about done, we threw in the clams and some mussels. We served this up with a large pile of torn up baguette for soaking up the broth.</p>
<p>After Dinner</p>
<p>I found a dry sherry that was very light, with coloring almost like a chardonnay, called La Gitana. It was crisp and not overly sweet, so paired well with the hot weather. We also had some entirely very dark chocolate that was purportedly from Spain, but I&#39;m betting the beans were not!</p>
<p>We spent a good two hours cooking, and had a great time: no injuries, nor recipe mishaps, and everyone seemed to enjoy the food. In retrospect, I&#39;d probably throw some lemon halves in the stock, and let the fish marinate a little longer, but otherwise everything came out pretty well. It was <em>really</em> fun to have an excuse to cook a big meal, and hang out with fun people, and all on a MONDAY no less!</p>
<p>I got some of the recipes and ideas from <a href="http://www.powells.com/biblio/0761135553" title="The New Spanish Table">The New Spanish Table</a>, found on Powell&#39;s sale table for $7. It&#39;s a decent cookbook - very accessible recipes, a lot of great tips and background info.</p>
]]></description><link>/2008/09/adventures-in-spanish-cooking/index.html</link><guid isPermaLink="true">/2008/09/adventures-in-spanish-cooking/index.html</guid><category><![CDATA[cooking]]></category><category><![CDATA[Food]]></category><category><![CDATA[Food]]></category><category><![CDATA[spain]]></category><category><![CDATA[tapas]]></category><dc:creator><![CDATA[Dietrich Ayala]]></dc:creator><pubDate>Wed, 17 Sep 2008 00:00:00 GMT</pubDate></item></channel></rss>